{"version":3,"sources":["api/ajax.js","api/index.js","utils/memoryUtils.js","utils/storageUtils.js","assets/images/logo.png","pages/login/login.jsx","utils/dateUtils.js","config/menuConfig.js","components/link-button/link-button.jsx","redux/action-types.js","components/header/header.jsx","components/left-nav/left-nav.jsx","redux/actions.js","pages/home/line.jsx","pages/home/bar.jsx","pages/home/home.jsx","pages/category/add-category.jsx","pages/category/update-category.jsx","pages/category/category.jsx","utils/constants.js","pages/product/home.jsx","pages/product/pictures-wall.jsx","pages/product/rich-text-editor.jsx","pages/product/add-update.jsx","pages/product/details.jsx","pages/product/product.jsx","pages/user/user-form.jsx","pages/user/user.jsx","pages/role/add-form.jsx","pages/role/update-form.jsx","pages/role/role.jsx","pages/charts/bar.jsx","pages/charts/line.jsx","pages/charts/pie.jsx","pages/order/order.jsx","pages/not-found/not-found.jsx","pages/admin/admin.jsx","App.js","redux/reducers.js","redux/store.js","index.js"],"names":["ajax","url","data","type","Promise","resolve","reject","promise","axios","get","params","post","console","log","then","response","catch","error","message","reqLogin","username","password","BASE","reqCategorys","parentId","reqUpdateCategory","categoryId","categoryName","reqAddCategory","reqProducts","pageNum","pageSize","reqSearchProducts","searchName","searchType","reqCategory","reqUpdateStatus","productId","status","reqAddOrUpdateProduct","product","_id","reqAddRole","roleName","reqUpdateRole","role","reqAddOrUpdateUser","user","reqWeather","city","jsonp","err","results","weather_data","dayPictureUrl","weather","USER_KEY","store","set","remove","Login","onFinish","values","a","result","success","memoryUtils","storageUtils","props","history","replace","msg","to","className","src","logo","alt","name","initialValues","remember","this","Item","rules","required","min","max","pattern","prefix","UserOutlined","style","color","placeholder","LockOutlined","htmlType","href","Component","formateTime","time","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","menuList","title","key","icon","icon1","HomeOutlined","isPublic","AppstoreOutlined","children","BarsOutlined","ToolOutlined","SafetyOutlined","AreaChartOutlined","BarChartOutlined","LineChartOutlined","PieChartOutlined","WindowsOutlined","LinkButton","SET_HEAD_TITLE","Header","state","currentTime","now","getTime","intervalId","setInterval","setState","getWeather","logout","confirm","ExclamationCircleOutlined","okText","cancelText","onOk","clearInterval","headTitle","onClick","connect","withRouter","SubMenu","LeftNav","hasAuth","item","menus","indexOf","find","cItem","getMenuNodes","map","pathname","location","openKey","setTitle","menuNodes","selectedKeys","defaultOpenKeys","mode","theme","month","temperature","Line","float","width","height","scale","padding","autoFit","point","size","shape","position","year","sales","Bar","marginTop","forceFit","RangePicker","dateFormat","Home","isVisited","handleChange","extra","QuestionCircleOutlined","value","precision","valueStyle","suffix","ArrowUpOutlined","fontSize","ArrowDownOutlined","defaultValue","moment","format","bodyStyle","Option","AddCategory","formRef","React","createRef","nextProps","nextState","current","setFieldsValue","form","setForm","categorys","ref","c","UpdateCategory","Category","loading","subCategorys","parentName","showState","initColums","columns","dataIndex","render","category","showAddSubCatory","showSubCategorys","getCategorys","showCategorys","addCategory","validateFields","resetFields","updateSubCategory","showAdd","handleCancel","ArrowRightOutlined","PlusOutlined","rowKey","bordered","dataSource","pagination","defaultPageSize","showQuickJumper","visible","onCancel","BASE_IMG_URL","ProductHome","products","total","price","newStatus","updateStatus","push","getProducts","list","onChange","margin","e","target","getBase64","file","reader","FileReader","readAsDataURL","onload","onerror","PicturesWall","getImgs","fileList","previewVisible","handlePreview","preview","originFileObj","previewImage","previewTitle","substring","lastIndexOf","length","imgs","img","index","uid","uploadButton","action","accept","listType","onPreview","footer","RichTextEditor","onEditorStateChange","editorState","getDetail","draftToHtml","convertToRaw","getCurrentContent","html","detail","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","EditorState","createWithContent","createEmpty","xhr","XMLHttpRequest","open","setRequestHeader","FormData","append","send","addEventListener","JSON","parse","responseText","link","editorStyle","border","minHeight","paddingLeft","toolbar","inline","inDropdown","textAlign","image","uploadCallback","uploadImageCallBack","present","mandatory","TextArea","AddUpdate","options","validatePrice","rule","submit","desc","categoryIds","pCategoryId","pw","editor","isUpdate","goBack","loadData","selectedOptions","targetOption","childOptions","label","isLeaf","initOptions","option","ArrowLeftOutlined","marginLeft","labelCol","span","wrapperCol","autoSize","minRows","maxRows","validator","addonAfter","Details","cName1","cName2","all","dangerouslySetInnerHTML","__html","Product","path","component","exact","UserForm","phone","email","role_id","roles","User","initColumns","roleNames","showUpdateUser","DeleteUser","initRoles","reduce","pre","addOrUpdateUser","getUsers","users","userId","AddRole","TreeNode","UpdateRole","getMenus","getAuth","checkedKeys","onCheck","menuTreeNodes","disabled","checkable","defaultExpandAll","Role","create_time","onRow","event","getRoles","isShowAdd","addRole","preState","updateRole","auth","isShowUpdate","auth_time","auth_name","rowSelection","selectedRowKeys","onSelect","happyness","getOption","xAxis","yAxis","series","updateData","h","Pie","getOption1","angleAxis","radiusAxis","polar","coordinateSystem","stack","legend","show","getOption2","text","subtext","left","tooltip","trigger","formatter","orient","radius","center","emphasis","itemStyle","shadowBlur","shadowOffsetX","shadowColor","Order","NotFound","Footer","Sider","Content","Admin","backgroundColor","from","App","combineReducers","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d9e87a63.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport {message} from 'antd'\r\n\r\nexport default function ajax(url,data={},type='GET'){\r\n    return new Promise((resolve, reject) => {\r\n        let promise\r\n        // 1. 执行异步ajax请求\r\n        if(type==='GET') { // 发GET请求\r\n          promise = axios.get(url, { // 配置对象\r\n            params: data // 指定请求参数\r\n          })\r\n        } else { // 发POST请求\r\n          promise = axios.post(url, data)\r\n          console.log(\"执行了post\")\r\n        }\r\n        // 2. 如果成功了, 调用resolve(value)\r\n        promise.then(response => {\r\n          resolve(response.data)\r\n        // 3. 如果失败了, 不调用reject(reason), 而是提示异常信息\r\n        }).catch(error => {\r\n          // reject(error)\r\n          message.error('请求出错了: ' + error.message)\r\n        })\r\n      })\r\n}","\r\nimport ajax from './ajax';\r\nimport jsonp from 'jsonp'\r\nimport {message} from 'antd'\r\n\r\nconst BASE = '/api'\r\n\r\nexport const reqLogin = (username, password) => ajax(BASE+'/login',{username,password},'POST')\r\n\r\n/**\r\n * 获取商品一级分类/二级分类列表\r\n */\r\nexport const reqCategorys = (parentId) =>ajax(BASE+'/manage/category/list',{parentId})\r\n\r\n// 修改商品分类\r\nexport const reqUpdateCategory = (categoryId,categoryName) => ajax(BASE+'/manage/category/update',{categoryId,categoryName},'POST')\r\n\r\n// 添加商品分类\r\nexport const reqAddCategory = (parentId,categoryName)=> ajax(BASE+'/manage/category/add',{parentId,categoryName},'POST')\r\n// 获取商品管理信息\r\nexport const reqProducts = (pageNum,pageSize)=>ajax(BASE+'/manage/product/list',{pageNum,pageSize})\r\n\r\n// 获取商品的搜索结果, searchType：搜索的类型，productName/ProductDesc\r\n// export const reqSearchProducts = ({pageNum,pageSize,searchName,searchType})=>ajax(\"/manage/product/search\",\r\n//     {\r\n//         pageNum,\r\n//         pageSize,\r\n//         [searchType]:searchName,\r\n//     })\r\nexport const reqSearchProducts = ({pageNum, pageSize, searchName, searchType}) => ajax(BASE+'/manage/product/search', {\r\n    pageNum,\r\n    pageSize,\r\n    [searchType]: searchName,\r\n    })\r\n\r\n// 获取一个分类\r\nexport const reqCategory = (categoryId) => ajax(BASE+'/manage/category/info', {categoryId})\r\n\r\n// 更新商品的状态(上架/下架)\r\nexport const reqUpdateStatus = (productId, status) => ajax(BASE+'/manage/product/updateStatus', {productId, status}, 'POST')\r\n\r\n// 删除图片\r\nexport const reqDeleteImg = (name)=>ajax(BASE+'/manage/img/delete',{name},'POST')\r\n// 添加或者更新product信息,一定要加上（）,否则会报错\r\nexport const reqAddOrUpdateProduct = (product) => ajax(BASE+'/manage/product/' + ( product._id?'update':'add'), product, 'POST')\r\n\r\n// 获取用户角色列表\r\nexport const reqRoles = ()=>ajax(BASE+'/manage/role/list')\r\n\r\n// 添加用户角色列表\r\nexport const reqAddRole = (roleName)=>ajax(BASE+'/manage/role/add',{roleName},'POST')\r\n\r\n// 更新用户角色列表\r\nexport const reqUpdateRole = (role)=>ajax(BASE+'/manage/role/update',role,'POST')\r\n\r\nexport const reqUserList = ()=>ajax(BASE+'/manage/user/list')\r\n\r\n// 删除用户\r\nexport const reqDelelteUser = (userId)=>ajax(BASE+'/manage/user/delete',{userId},'POST')\r\n\r\n// 添加用户\r\nexport const reqAddUser = (user)=>ajax(BASE+'/manage/user/add',user,'POST')\r\n// 添加或者更新User信息,一定要加上（）,否则会报错\r\nexport const reqAddOrUpdateUser = (user) => ajax(BASE+'/manage/user/' + ( user._id?'update':'add'), user, 'POST')\r\n\r\n/**\r\n * json请求的接口函数\r\n */\r\nexport const reqWeather = (city)=>{\r\n    const url = `http://api.map.baidu.com/telematics/v3/weather?location=${city}&output=json&ak=3p49MVra6urFRGOT9s8UBWr2`\r\n    return new Promise((resolve,reject)=>{\r\n        jsonp(url,{},(err,data)=>{\r\n            // console.log(\"data\",data)\r\n            if(!err && data.status==='success'){\r\n                // 如果请求成功，则取出所需要的天气信息\r\n                const {dayPictureUrl,weather} = data.results[0].weather_data[0]\r\n                resolve({dayPictureUrl,weather})\r\n            }else{\r\n                // 提示错误信息\r\n                message.error(\"天气获取失败！\")\r\n            }\r\n        })\r\n    })\r\n    \r\n}\r\n\r\n// reqWeather('北京')","export default {\r\n    user:{}//保存当前的user\r\n}","import store from 'store'\r\nconst USER_KEY = 'user_key';\r\nexport default{\r\n    /**\r\n     * 保存user\r\n     */\r\n    saveUser(user){\r\n        // localStorage.setItem(USER_KEY,JSON.stringify(user))\r\n        store.set(USER_KEY,user)\r\n    },\r\n\r\n    /**\r\n     * 读取user\r\n     */\r\n    getUser(){\r\n        // return JSON.parse(localStorage.getItem(USER_KEY)||'{}')\r\n        return store.get(USER_KEY) || {}\r\n    },\r\n    /**\r\n     * 删除user\r\n     */\r\n    removeUser(){\r\n        // localStorage.removeItem(USER_KEY)\r\n        store.remove(USER_KEY)\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/logo.f6487143.png\";","/*\r\n用户登陆的路由组件\r\n*/\r\nimport React, { Component } from 'react'\r\nimport { Form, Input, Button, message } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport {Redirect} from 'react-router-dom'\r\nimport {reqLogin} from '../../api/index';\r\nimport memoryUtils from '../../utils/memoryUtils';\r\nimport storageUtils from '../../utils/storageUtils'\r\nimport './login.less'\r\nimport logo from '../../assets/images/logo.png'\r\n\r\nexport default class Login extends Component {\r\n    onFinish = async (values) => {\r\n        console.log('Received values of form: ', values);\r\n        const {username,password} = values;\r\n        // const result = reqLogin(username,password).then(response=>{\r\n        //     console.log(response)\r\n        //     // if(result.status===0){\r\n        //     //     // 提示登录成功\r\n        //     //     message.success(\"登录成功\")\r\n        //     //     console.log(\"看看这个是什么\")\r\n        //     //     // 跳转到管理界面 (不需要再回退回到登陆)\r\n        //     //     this.props.history.replace('/')\r\n        //     // }else{\r\n        //     //     message.error(\"登录失败\")\r\n        //     // }\r\n        // })\r\n        // 注意：改了package.json配置一定要重启项目，否则会报错\r\n        const result = await reqLogin(username,password)\r\n        // console.log(\"result\",result)\r\n        if(result.status===0){\r\n            // 提示登录成功\r\n            message.success(\"登录成功\")\r\n            // 保存登录状态\r\n            memoryUtils.user = result.data;\r\n            storageUtils.saveUser(result.data); \r\n            //保存到localstorage\r\n            // 跳转到管理界面 (不需要再回退回到登陆)\r\n            this.props.history.replace('/')\r\n        }else{\r\n            message.error(result.msg)\r\n        }\r\n        \r\n      };\r\n    render() {\r\n        const user = memoryUtils.user;\r\n        if(user&&user._id){\r\n            return <Redirect to='/'></Redirect>\r\n        }\r\n        return (\r\n            <div className=\"login\">\r\n                <header className=\"login-header\">\r\n                    <img src={logo} alt='logo'></img>\r\n                    <h1>React 项目: 后台管理系统</h1>\r\n                </header>\r\n                <section className=\"login-content\">\r\n                    <h2>用户登录</h2>\r\n                    <Form\r\n                        name=\"normal_login\"\r\n                        className=\"login-form\"\r\n                        initialValues={{ remember: true }}\r\n                        onFinish={this.onFinish}\r\n                        >\r\n                        <Form.Item\r\n                            name=\"username\"\r\n                            rules={[{ required: true, message: 'Please input your Username!' },\r\n                            { min: 4, message: '用户名必须大于4!' },\r\n                            { max: 16, message: '用户名必须小于8!' },\r\n                            { pattern: /^[a-zA-Z_0-9]+$/, message: '用户名必须是英文、数组或者下划线组成!' },\r\n                        ]}\r\n                        >\r\n                            <Input prefix={<UserOutlined className=\"site-form-item-icon\" style={{color:'rgba(0,0,0,.5)'}}/>} placeholder=\"用户名\" />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"password\"\r\n                            rules={[{ required: true, message: 'Please input your Password!' }]}\r\n                        >\r\n                            <Input\r\n                                prefix={<LockOutlined className=\"site-form-item-icon\" style={{color:'rgba(0,0,0,.5)'}}/>}\r\n                                type=\"password\"\r\n                                placeholder=\"密码\"\r\n                            />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                                Log in\r\n                            </Button>\r\n                            Or <a href=\"\">register now!</a>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}","// 时间格式化函数\r\nexport function formateTime(time){\r\n    // 如果没有初始化值，返回空串\r\n    if(!time){\r\n        return ''\r\n    }\r\n    let date = new Date(time)\r\n    return date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate() + ' ' +\r\n        date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds()\r\n}","import {\r\n  HomeOutlined,\r\n  AppstoreOutlined,\r\n  BarsOutlined,\r\n  ToolOutlined,\r\n  UserOutlined,\r\n  SafetyOutlined,\r\n  AreaChartOutlined,\r\n  BarChartOutlined,\r\n  LineChartOutlined,\r\n  PieChartOutlined,\r\n  WindowsOutlined\r\n} from '@ant-design/icons';\r\n\r\nconst menuList = [\r\n    {\r\n      title: '首页', // 菜单标题名称\r\n      key: '/home', // 对应的path\r\n      icon: 'HomeOutlined', // 图标名称\r\n      icon1: HomeOutlined, // 图标对象\r\n      isPublic: true, // 公开的\r\n    },\r\n    {\r\n      title: '商品',\r\n      key: '/products',\r\n      icon: 'AppstoreOutlined',\r\n      icon1: AppstoreOutlined,\r\n      children: [ // 子菜单列表\r\n        {\r\n          title: '品类管理',\r\n          key: '/category',\r\n          icon: 'BarsOutlined',\r\n          icon1: BarsOutlined\r\n        },\r\n        {\r\n          title: '商品管理',\r\n          key: '/product',\r\n          icon: 'ToolOutlined',\r\n          icon1: ToolOutlined\r\n        },\r\n      ]\r\n    },\r\n  \r\n    {\r\n      title: '用户管理',\r\n      key: '/user',\r\n      icon: 'UserOutlined',\r\n      icon1: UserOutlined\r\n    },\r\n    {\r\n      title: '角色管理',\r\n      key: '/role',\r\n      icon: 'SafetyOutlined',\r\n      icon1: SafetyOutlined\r\n    },\r\n  \r\n    {\r\n      title: '图形图表',\r\n      key: '/charts',\r\n      icon: 'AreaChartOutlined',\r\n      icon1: AreaChartOutlined,\r\n      children: [\r\n        {\r\n          title: '柱形图',\r\n          key: '/charts/bar',\r\n          icon: 'BarChartOutlined',\r\n          icon1: BarChartOutlined\r\n        },\r\n        {\r\n          title: '折线图',\r\n          key: '/charts/line',\r\n          icon: 'LineChartOutlined',\r\n          icon1: LineChartOutlined\r\n        },\r\n        {\r\n          title: '饼图',\r\n          key: '/charts/pie',\r\n          icon: 'PieChartOutlined',\r\n          icon1: PieChartOutlined\r\n        },\r\n      ]\r\n    },\r\n  \r\n    {\r\n      title: '订单管理',\r\n      key: '/order',\r\n      icon: 'WindowsOutlined',\r\n      icon1: WindowsOutlined\r\n    },\r\n  ]\r\n  \r\n  export default menuList","/*\r\n用户登陆的路由组件\r\n*/\r\nimport { Button } from 'antd'\r\nimport React, { Component } from 'react'\r\nimport './index.less'\r\n\r\nexport default function LinkButton (props) {\r\n        return (\r\n            <button {...props} className='link-button'></button>\r\n        )\r\n}","\r\n// 设置标题\r\nexport const SET_HEAD_TITLE = 'set_head_title'","import React, { Component } from 'react'\r\nimport {withRouter} from 'react-router-dom'\r\nimport { Modal, Button } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport './header.less';\r\nimport memoryUtils from '../../utils/memoryUtils';\r\nimport storageUtils from '../../utils/storageUtils';\r\nimport {formateTime} from '../../utils/dateUtils';\r\nimport {reqWeather} from '../../api/index';\r\nimport menuList from '../../config/menuConfig';\r\nimport LinkButton from '../link-button/link-button'\r\nimport {connect} from 'react-redux'\r\nimport {setTitle} from '../../redux/actions'\r\n\r\nclass Header extends Component {\r\n    state = {\r\n        currentTime:formateTime(Date.now()), // 用定义的时间格式化函数，做一次格式化，得到想要的时间形式\r\n        dayPictureUrl:'', // 天气图片的url\r\n        weather:''\r\n    }\r\n\r\n    getTime = ()=>{\r\n        // 需要每隔1s能够更新一次时间\r\n        this.intervalId = setInterval(()=>{\r\n            this.setState({currentTime:formateTime(Date.now())})\r\n        },1000)\r\n    }\r\n    getWeather = async ()=>{\r\n        // 获取天气图片的url与天气状况信息\r\n        const {dayPictureUrl,weather} = await reqWeather('北京')\r\n        // 更新状态\r\n        this.setState({dayPictureUrl,weather})\r\n    }\r\n    // getTitle = ()=>{\r\n    //     // 找到和当前访问的路由对应的title\r\n    //     const pathname = this.props.location.pathname;\r\n    //     let title;\r\n    //     menuList.forEach(item=>{\r\n    //         if(item.key===pathname){\r\n    //             title = item.title\r\n    //         }else if(item.children){\r\n    //             // 如果有二级memu，则找二级下的title\r\n    //             const cItem = item.children.find(cItem=>pathname.indexOf(cItem.key)===0)\r\n    //             // 如果有值才说明有匹配的\r\n    //             if(cItem) {\r\n    //                 // 取出它的title\r\n    //                  title = cItem.title\r\n    //             }\r\n    //         }\r\n    //     })\r\n    //     return title;\r\n    // }\r\n\r\n    logout =()=>{\r\n        Modal.confirm({\r\n            title: '退出登录？',\r\n            icon: <ExclamationCircleOutlined />,\r\n            // content: 'Bla bla ...',\r\n            okText: '确认',\r\n            cancelText: '取消',\r\n            onOk:()=>{\r\n\r\n             // 删除保存的user数据，跳转到登录\r\n            storageUtils.removeUser()\r\n            memoryUtils.user = {}\r\n            this.props.history.replace('/login')\r\n            }\r\n        });\r\n    }\r\n    componentDidMount(){\r\n        // 在render之后执行一次\r\n        // 处理异步ajax请求与时间函数\r\n        this.getTime()\r\n        this.getWeather()\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        // 清除定时器\r\n        clearInterval(this.intervalId)\r\n    }\r\n\r\n    render() {\r\n        const username = memoryUtils.user.username;\r\n        const {currentTime,dayPictureUrl,weather} = this.state;\r\n        // const title = this.getTitle()\r\n        const title = this.props.headTitle\r\n        return (\r\n               <div className=\"header\">\r\n                   <div className='header-top'>\r\n                    <span>欢迎,{username}</span>\r\n                       {/* <a href=\"javascript::\" ></a> */}\r\n                       <LinkButton onClick={this.logout}>退出</LinkButton>\r\n                   </div>\r\n                   <div className='header-bottom'>\r\n                       <div className='header-bottom-left'>{title}</div>\r\n                       <div className='header-bottom-right'>\r\n                            <span>{currentTime}</span>\r\n                            <img src={dayPictureUrl} alt=\"\"/>\r\n                            <span>{weather}</span>\r\n                       </div>\r\n                   </div>\r\n               </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state=>({\r\n        headTitle:state.headTitle\r\n    }),\r\n    \r\n)(withRouter(Header))","import React, { Component } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport { Menu } from 'antd';\r\nimport menuList from '../../config/menuConfig'\r\nimport './left-nav.less'\r\nimport logo from '../../assets/images/logo.png'\r\nimport memoryUtils from '../../utils/memoryUtils'\r\nimport storageUtils from '../../utils/storageUtils'\r\nimport { connect } from 'react-redux'\r\nimport {setTitle} from '../../redux/actions'\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nclass LeftNav extends Component {\r\n    // getMenuNodes = (menuList)=>{\r\n    //     return menuList.map((item)=>{\r\n    //         if(!item.children){\r\n    //             switch (item.icon) {\r\n    //                 case 'HomeOutlined':\r\n    //                     return(\r\n    //                         <Menu.Item key={item.key}>\r\n    //                         <Link to={item.key}>\r\n    //                             <HomeOutlined/>\r\n    //                           <span>{item.title}</span>\r\n    //                         </Link>\r\n    //                       </Menu.Item>\r\n    //                     )\r\n    //                 case 'BarsOutlined':\r\n    //                     return(\r\n    //                         <Menu.Item key={item.key}>\r\n    //                         <Link to={item.key}>\r\n    //                             <BarsOutlined/>\r\n    //                           <span>{item.title}</span>\r\n    //                         </Link>\r\n    //                       </Menu.Item>\r\n    //                     )\r\n    //                 case 'ToolOutlined':\r\n    //                     return(\r\n    //                         <Menu.Item key={item.key}>\r\n    //                         <Link to={item.key}>\r\n    //                             <ToolOutlined/>\r\n    //                             <span>{item.title}</span>\r\n    //                         </Link>\r\n    //                         </Menu.Item>\r\n    //                     )\r\n    //                 case 'UserOutlined':\r\n    //                     return(\r\n    //                         <Menu.Item key={item.key}>\r\n    //                         <Link to={item.key}>\r\n    //                             <UserOutlined/>\r\n    //                             <span>{item.title}</span>\r\n    //                         </Link>\r\n    //                         </Menu.Item>\r\n    //                     )\r\n    //                 case 'SafetyOutlined':\r\n    //                     return(\r\n    //                         <Menu.Item key={item.key}>\r\n    //                         <Link to={item.key}>\r\n    //                             <SafetyOutlined/>\r\n    //                             <span>{item.title}</span>\r\n    //                         </Link>\r\n    //                         </Menu.Item>\r\n    //                     )\r\n    //                     case 'BarChartOutlined':\r\n    //                         return(\r\n    //                             <Menu.Item key={item.key}>\r\n    //                             <Link to={item.key}>\r\n    //                                 <BarChartOutlined/>\r\n    //                                 <span>{item.title}</span>\r\n    //                             </Link>\r\n    //                             </Menu.Item>\r\n    //                         )\r\n    //                     case 'LineChartOutlined':\r\n    //                         return(\r\n    //                             <Menu.Item key={item.key}>\r\n    //                             <Link to={item.key}>\r\n    //                                 <LineChartOutlined/>\r\n    //                                 <span>{item.title}</span>\r\n    //                             </Link>\r\n    //                             </Menu.Item>\r\n    //                         )\r\n    //                     case 'PieChartOutlined':\r\n    //                         return(\r\n    //                             <Menu.Item key={item.key}>\r\n    //                             <Link to={item.key}>\r\n    //                                 <PieChartOutlined/>\r\n    //                                 <span>{item.title}</span>\r\n    //                             </Link>\r\n    //                             </Menu.Item>\r\n    //                         )\r\n\r\n    //                 default:\r\n    //                     return(\r\n    //                         <Menu.Item key={item.key}>\r\n    //                         <Link to={item.key}>\r\n    //                             <WindowsOutlined/>\r\n    //                           <span>{item.title}</span>\r\n    //                         </Link>\r\n    //                       </Menu.Item>\r\n    //                     )\r\n    //             }\r\n\r\n    //         }else{\r\n    //             // 查找一个与当前请求路径匹配的子Item\r\n    //             const pathname = this.props.location.pathname;\r\n    //             const cItem = item.children.find(cItem=>cItem.key===pathname)\r\n    //             // 如果存在, 说明当前item的子列表需要打开\r\n    //             if (cItem) {\r\n    //                 this.openKey = item.key\r\n    //             }\r\n    //             switch (item.icon) {\r\n    //                 case 'AppstoreOutlined':\r\n    //                     return(\r\n    //                         <SubMenu\r\n    //                         key={item.key}\r\n    //                         title={\r\n    //                         <span>\r\n    //                             <AppstoreOutlined />\r\n    //                             <span>{item.title}</span>\r\n    //                         </span>\r\n    //                         }\r\n    //                     >\r\n    //                         {this.getMenuNodes(item.children)}\r\n    //                     </SubMenu>\r\n    //                     )\r\n    //                 case 'AreaChartOutlined':\r\n    //                     return(\r\n    //                         <SubMenu\r\n    //                         key={item.key}\r\n    //                         title={\r\n    //                         <span>\r\n    //                             <AreaChartOutlined />\r\n    //                             <span>{item.title}</span>\r\n    //                         </span>\r\n    //                         }\r\n    //                     >\r\n    //                         {this.getMenuNodes(item.children)}\r\n    //                     </SubMenu>\r\n    //                     )\r\n    //                 default:\r\n    //                     break;\r\n    //             }\r\n\r\n    //         }\r\n    //     })\r\n    // }\r\n    hasAuth = (item) => {\r\n        /**\r\n         1. 用户都可以看到首页，设置为isPublic\r\n         2. 超级管理员，可以看到所有权限，username为'admin'\r\n         3. 当前用户包括的role\r\n         */\r\n        const { user } = memoryUtils\r\n        const { username, role } = user\r\n        const menus = role.menus\r\n        if (username === 'admin' || item.isPublic || menus.indexOf(item.key) !== -1) {\r\n            // menus中能找到item.key即可\r\n            return true\r\n        } else if (item.children) {\r\n            // 但是有的可能有二级路由，而一级路由的menus没有包含item.key，而应该在item.children中找\r\n            return !!item.children.find(cItem => menus.indexOf(cItem.key) !== -1)\r\n        }\r\n    }\r\n\r\n    getMenuNodes = (menuList) => {\r\n        return menuList.map((item) => {\r\n            // 查找一个与当前请求路径匹配的子Item\r\n            const pathname = this.props.location.pathname;\r\n            // 满足条件才能拿到item\r\n            if (this.hasAuth(item)) {\r\n                if (!item.children) {\r\n                    // 判断item是否是当前对应的item\r\n                    if (item.key === pathname || pathname.indexOf(item.key) === 0) {\r\n                        // 更新redux中的headerTitle状态\r\n                        this.props.setTitle(item.title)\r\n                    }\r\n                    return (\r\n                        <Menu.Item key={item.key}>\r\n                            <Link to={item.key} onClick={()=>this.props.setTitle(item.title)}>\r\n                                <item.icon1 />\r\n                                <span>{item.title}</span>\r\n                            </Link>\r\n                        </Menu.Item>\r\n                    )\r\n                } else {\r\n\r\n                    // const cItem = item.children.find(cItem=>cItem.key===pathname)此为精准匹配，\r\n                    //对于/product来说，其子路由/product/details也应该选中\r\n                    const cItem = item.children.find(cItem => pathname.indexOf(cItem.key) === 0)\r\n                    // 如果存在, 说明当前item的子列表需要打开\r\n                    if (cItem) {\r\n                        this.openKey = item.key\r\n                    }\r\n                    return (\r\n\r\n                        <SubMenu\r\n                            key={item.key}\r\n                            title={\r\n                                <span>\r\n                                    <item.icon1 />\r\n                                    <span>{item.title}</span>\r\n                                </span>\r\n                            }\r\n                        >\r\n                            {this.getMenuNodes(item.children)}\r\n                        </SubMenu>\r\n                    )\r\n                }\r\n\r\n            }\r\n\r\n        })\r\n    }\r\n    /*\r\n     在第一次render()之前执行一次\r\n     为第一个render()准备数据(必须同步的)\r\n   */\r\n    componentWillMount() {\r\n        this.menuNodes = this.getMenuNodes(menuList);\r\n    }\r\n    render() {\r\n        let pathname = this.props.location.pathname;\r\n        const openKey = this.openKey;\r\n        if (pathname.indexOf(\"/product\") === 0) {\r\n            pathname = \"/product\"\r\n        }\r\n        return (\r\n            <div className='left-nav'>\r\n                <Link to='/' className='logo-link'>\r\n                    <img src={logo} alt=\"logo\" />\r\n                    <h1>后台服务</h1>\r\n                </Link>\r\n                <Menu\r\n                    // defaultSelectedKeys={['/home']}\r\n                    selectedKeys={[pathname]}\r\n                    defaultOpenKeys={[openKey]}\r\n                    mode=\"inline\"\r\n                    theme=\"dark\"\r\n                >\r\n                    {/* <Menu.Item key=\"1\" icon={<PieChartOutlined />}>\r\n                        <Link to='/home'>首页</Link>\r\n                    </Menu.Item>\r\n                    <SubMenu key=\"sub1\" icon={<MailOutlined />} title=\"商品\">\r\n                        <Menu.Item key=\"2\">\r\n                            <Link to='/product'>\r\n                            <span>\r\n                                <ContainerOutlined/>\r\n                                <span>品类管理</span>\r\n                            </span>\r\n                            </Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"3\">\r\n                            <Link to='/product'>\r\n                                <ContainerOutlined/>\r\n                                <span>商品管理</span>\r\n                             </Link>\r\n                        </Menu.Item>\r\n                    </SubMenu>\r\n                    <Menu.Item key=\"4\" icon={<PieChartOutlined />}>\r\n                        <Link to='/user'> 用户管理</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"5\" icon={<PieChartOutlined />}>\r\n                        <Link to='/role'>角色管理</Link>\r\n                    </Menu.Item>\r\n                    <SubMenu key=\"sub2\" icon={<MailOutlined />} title=\"图形图表\">\r\n                        <Menu.Item key=\"6\">\r\n                            <Link to=\"/charts/bar\">\r\n                                <span>\r\n                                    <ContainerOutlined/>\r\n                                    <span>柱状图</span>\r\n                                </span>\r\n                            </Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"7\">\r\n                        <Link to=\"/charts/line\">\r\n                                <span>\r\n                                    <ContainerOutlined/>\r\n                                    <span>折线图</span>\r\n                                </span>\r\n                            </Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"8\">\r\n                        <Link to=\"/charts/pie\">\r\n                                <span>\r\n                                    <ContainerOutlined/>\r\n                                    <span>饼状图</span>\r\n                                </span>\r\n                            </Link>\r\n                        </Menu.Item>\r\n                    </SubMenu>\r\n                    <Menu.Item key=\"9\" icon={<PieChartOutlined />}>\r\n                        <Link to=\"/order\">订单管理</Link>\r\n                    </Menu.Item> */}\r\n                    {this.menuNodes}\r\n                </Menu>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({\r\n        headTitle: state.headTitle\r\n    }),\r\n    {\r\n        setTitle\r\n    }\r\n)(withRouter(LeftNav))","\r\nimport {SET_HEAD_TITLE} from './action-types'\r\n\r\n/**\r\n * 设置头部Title\r\n */\r\nexport const setTitle = (title)=>({type:SET_HEAD_TITLE,data:title})","import React from \"react\";\r\nimport { Chart, LineAdvance } from \"bizcharts\";\r\n\r\n// 数据源\r\nconst data = [\r\n  {\r\n    month: \"Jan\",\r\n    city: \"Tokyo\",\r\n    temperature: 7,\r\n  },\r\n  {\r\n    month: \"Jan\",\r\n    city: \"London\",\r\n    temperature: 3.9,\r\n  },\r\n  {\r\n    month: \"Feb\",\r\n    city: \"Tokyo\",\r\n    temperature: 6.9,\r\n  },\r\n  {\r\n    month: \"Feb\",\r\n    city: \"London\",\r\n    temperature: 4.2,\r\n  },\r\n  {\r\n    month: \"Mar\",\r\n    city: \"Tokyo\",\r\n    temperature: 9.5,\r\n  },\r\n  {\r\n    month: \"Mar\",\r\n    city: \"London\",\r\n    temperature: 5.7,\r\n  },\r\n  {\r\n    month: \"Apr\",\r\n    city: \"Tokyo\",\r\n    temperature: 14.5,\r\n  },\r\n  {\r\n    month: \"Apr\",\r\n    city: \"London\",\r\n    temperature: 8.5,\r\n  },\r\n  {\r\n    month: \"May\",\r\n    city: \"Tokyo\",\r\n    temperature: 18.4,\r\n  },\r\n  {\r\n    month: \"May\",\r\n    city: \"London\",\r\n    temperature: 11.9,\r\n  },\r\n  {\r\n    month: \"Jun\",\r\n    city: \"Tokyo\",\r\n    temperature: 21.5,\r\n  },\r\n  {\r\n    month: \"Jun\",\r\n    city: \"London\",\r\n    temperature: 15.2,\r\n  },\r\n  {\r\n    month: \"Jul\",\r\n    city: \"Tokyo\",\r\n    temperature: 25.2,\r\n  },\r\n  {\r\n    month: \"Jul\",\r\n    city: \"London\",\r\n    temperature: 17,\r\n  },\r\n  {\r\n    month: \"Aug\",\r\n    city: \"Tokyo\",\r\n    temperature: 26.5,\r\n  },\r\n  {\r\n    month: \"Aug\",\r\n    city: \"London\",\r\n    temperature: 16.6,\r\n  },\r\n  {\r\n    month: \"Sep\",\r\n    city: \"Tokyo\",\r\n    temperature: 23.3,\r\n  },\r\n  {\r\n    month: \"Sep\",\r\n    city: \"London\",\r\n    temperature: 14.2,\r\n  },\r\n  {\r\n    month: \"Oct\",\r\n    city: \"Tokyo\",\r\n    temperature: 18.3,\r\n  },\r\n  {\r\n    month: \"Oct\",\r\n    city: \"London\",\r\n    temperature: 10.3,\r\n  },\r\n  {\r\n    month: \"Nov\",\r\n    city: \"Tokyo\",\r\n    temperature: 13.9,\r\n  },\r\n  {\r\n    month: \"Nov\",\r\n    city: \"London\",\r\n    temperature: 6.6,\r\n  },\r\n  {\r\n    month: \"Dec\",\r\n    city: \"Tokyo\",\r\n    temperature: 9.6,\r\n  },\r\n  {\r\n    month: \"Dec\",\r\n    city: \"London\",\r\n    temperature: 4.8,\r\n  },\r\n];\r\n\r\nfunction Line() {\r\n  return (\r\n    <div style={{ float: 'right', width: 600, height: 300 }}>\r\n      <Chart\r\n        scale={{ temperature: { min: 0 } }}\r\n        padding={[10, 20, 50, 40]}\r\n        autoFit\r\n        height={280}\r\n        data={data}\r\n      >\r\n        <LineAdvance\r\n          point={{ size: 3 }}\r\n          shape=\"smooth\"\r\n          position=\"month*temperature\"\r\n          color=\"city\"\r\n        />\r\n      </Chart>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Line","import React from 'react';\r\nimport { Chart, Interval } from 'bizcharts';\r\n\r\nconst data = [\r\n  { year: '1951 年', sales: 38 },\r\n  { year: '1952 年', sales: 52 },\r\n  { year: '1956 年', sales: 61 },\r\n  { year: '1957 年', sales: 45 },\r\n  { year: '1958 年', sales: 48 },\r\n  { year: '1959 年', sales: 38 },\r\n  { year: '1960 年', sales: 38 },\r\n  { year: '1962 年', sales: 38 },\r\n];\r\n\r\n\r\nfunction Bar() {\r\n  return <div style={{ width: '100%' , marginTop: 30}}>\r\n    <Chart height={238} forceFit data={data} >\r\n      <Interval position=\"year*sales\" />\r\n    </Chart>\r\n  </div>\r\n\r\n}\r\n\r\nexport default Bar\r\n","/*\r\n用户登陆的路由组件\r\n*/\r\nimport React, { Component } from 'react'\r\nimport './index.less'\r\nimport Line from './line'\r\nimport Bar from './bar'\r\nimport {\r\n    Card,\r\n    Statistic,\r\n    Timeline,\r\n    DatePicker\r\n} from 'antd'\r\nimport moment from 'moment';\r\n\r\nimport { ArrowUpOutlined, ArrowDownOutlined, QuestionCircleOutlined } from '@ant-design/icons'\r\n\r\nconst { RangePicker } = DatePicker;\r\nconst dateFormat = 'YYYY/MM/DD';\r\nexport default class Home extends Component {\r\n    state = {\r\n        isVisited: true\r\n    }\r\n    handleChange = (isVisited) => {\r\n        return () => this.setState({isVisited})\r\n    }\r\n    render() {\r\n        const { isVisited } = this.state\r\n        return (\r\n            <div className=\"home\">\r\n                <Card\r\n                    className=\"home-card\"\r\n                    title=\"商品总量\"\r\n                    extra={<QuestionCircleOutlined />}\r\n                    style={{ width: 250, height: 300 }}>\r\n                    <Statistic\r\n                        value={11}\r\n                        precision={0}\r\n                        valueStyle={{ color: '#000000' }}\r\n                        prefix={\"总体趋势\"}\r\n                        suffix={<div>%<ArrowUpOutlined /></div>}\r\n                    />\r\n                    <Statistic\r\n                        title=\"Active\"\r\n                        value={11.28}\r\n\r\n                        precision={2}\r\n                        valueStyle={{ color: '#3f8600', fontSize: 15 }}\r\n                        prefix=\"周同比\"\r\n                        suffix={<div>%<ArrowUpOutlined /></div>}\r\n                    />\r\n                    <Statistic\r\n                        title=\"Idle\"\r\n                        value={9.3}\r\n                        precision={2}\r\n                        valueStyle={{ color: '#cf1322', fontSize: 15 }}\r\n                        prefix=\"周同比\"\r\n                        suffix={<div>%<ArrowDownOutlined /></div>}\r\n                    />\r\n                </Card>\r\n                <Line />\r\n\r\n                <Card\r\n                    className='home-content'\r\n                    title={\r\n                        <div className=\"home-menu\">\r\n                            <span className={isVisited ? \"home-menu-active home-menu-visited\" : 'home-menu-visited'}\r\n                                onClick={this.handleChange(true)}>访问量</span>\r\n                            <span className={isVisited ? \"\" : 'home-menu-active'} onClick={this.handleChange(false)}>销售量</span>\r\n                        </div>\r\n                    }\r\n                    extra={<RangePicker\r\n                        defaultValue={[moment('2020/11/10', dateFormat), moment('2019/11/24', dateFormat)]}\r\n                        format={dateFormat}\r\n                      />}\r\n                >\r\n                    <Card\r\n                        className=\"home-table-left\"\r\n                        title={isVisited ? '访问趋势' : '销售趋势'}\r\n                        bodyStyle={{ padding: 0, height: 275 }}\r\n                        extra={<QuestionCircleOutlined />}\r\n                    >\r\n                        <Bar />\r\n                    </Card>\r\n                    <Card title='任务' extra={<QuestionCircleOutlined/>} className=\"home-table-right\">\r\n                        <Timeline>\r\n                            <Timeline.Item color=\"green\">新版本迭代会</Timeline.Item>\r\n                            <Timeline.Item color=\"green\">完成网站设计初版</Timeline.Item>\r\n                            <Timeline.Item color=\"red\">\r\n                                <p>联调接口</p>\r\n                                <p>功能验收</p>\r\n                            </Timeline.Item>\r\n                            <Timeline.Item>\r\n                                <p>登录功能设计</p>\r\n                                <p>权限验证</p>\r\n                                <p>页面排版</p>\r\n                            </Timeline.Item>\r\n                        </Timeline>\r\n                    </Card>\r\n                </Card> \r\n            \r\n            </div >\r\n        )\r\n    }\r\n}","/*\r\n用户登陆的路由组件\r\n*/\r\nimport React, { Component } from 'react'\r\nimport {Select,Form,Input} from 'antd'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Item = Form.Item;\r\nconst { Option } = Select;\r\n\r\nexport default class AddCategory extends Component {\r\n    // 通过 Ref 来获取 Form 实例\r\n    formRef = React.createRef()\r\n\r\n    static propTypes = {\r\n        categorys:PropTypes.array.isRequired, // 一级分类数组\r\n        parentId:PropTypes.string.isRequired, // 父组件的标识\r\n        setForm:PropTypes.func.isRequired\r\n    } \r\n\r\n    shouldComponentUpdate(nextProps,nextState){\r\n        if(nextProps.parentId!=this.props.parentId){\r\n            // 判断是否需要更新Item中的值，如果需要更新，则重新渲染\r\n            this.formRef.current.setFieldsValue({'parentId':nextProps.parentId});\r\n            console.log(\"parentId对比\",nextProps.parentId)\r\n            return true\r\n        }else{\r\n            return false\r\n        }\r\n    }\r\n\r\n    componentDidMount () {\r\n        // 将form对象通过setForm()传递父组件\r\n        const form = this.formRef.current\r\n        // 尝试修改每次的修改\r\n        \r\n        // console.log(\"这是form\",form)\r\n        this.props.setForm(form) \r\n    }\r\n\r\n    render() {\r\n        const {categorys,parentId} = this.props \r\n        // console.log(\"wode parentID\",parentId)\r\n        return (\r\n            <Form\r\n                ref={this.formRef}\r\n                initialValues={{parentId:'0'}}\r\n            >\r\n                <Item name='parentId'>\r\n                    {/* // 如果要动态显示，则看看parentId和Option里的value值是否匹配 */}\r\n                    <Select> \r\n                        <Option value=\"0\">一级分类</Option>\r\n                        {categorys.map((c)=><Option value={c._id}>{c.name}</Option>)}\r\n                    </Select>\r\n                </Item>\r\n                <Item \r\n                name='categoryName'\r\n                rules={[\r\n                    {required: true, message: '分类名称必须输入'}\r\n                ]}\r\n                >\r\n                    <Input placeholder=\"请输入分类名称\"></Input>\r\n                </Item>\r\n            </Form>\r\n        )\r\n    }\r\n}","/*\r\n用户登陆的路由组件\r\n*/\r\nimport React, { Component } from 'react'\r\nimport {Form,Input,message} from 'antd'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst Item = Form.Item;\r\n\r\nexport default class UpdateCategory extends Component {\r\n    // 通过 Ref 来获取 Form 实例\r\n    // 同样的，你可以不使用createRef()方法而用this.refs.XXX也可以\r\n    formRef = React.createRef()\r\n\r\n    static propTypes = {\r\n        categoryName:PropTypes.string.isRequired,\r\n        setForm: PropTypes.func.isRequired\r\n    }\r\n\r\n    componentDidMount () {\r\n        // 将form对象通过setForm()传递父组件\r\n        const form = this.formRef.current\r\n        // 尝试修改每次的修改\r\n        \r\n        // console.log(\"这是form\",form)\r\n        this.props.setForm(form) \r\n    }\r\n\r\n    shouldComponentUpdate(nextProps,nextState){\r\n        if(nextProps.categoryName!=this.props.categoryName){\r\n            // console.log(\"应该更新一下\")\r\n            // console.log(\"props\",nextProps)\r\n            // const {categoryName} = this.props\r\n            // console.log(\"分类\",categoryName)\r\n            this.formRef.current.setFieldsValue({'categoryName':nextProps.categoryName});\r\n            return true\r\n        }else{\r\n            return false\r\n        }\r\n   }\r\n    \r\n    render() {\r\n        const {categoryName} = this.props\r\n        \r\n        return (\r\n            <Form\r\n            ref={this.formRef}\r\n            initialValues={ {'categoryName':categoryName}}\r\n            >\r\n                <Item\r\n                name='categoryName'\r\n                // initialValue={categoryName}\r\n                rules={[\r\n                    {required: true, message: '分类名称必须输入'}\r\n                ]}\r\n                >\r\n                    <Input placeholder=\"请输入分类名称\" \r\n                    ></Input>\r\n                </Item>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\n","/*\r\n商品品类管理\r\n*/\r\nimport React, { Component } from 'react'\r\nimport { Button, Card, Table, message, Modal } from 'antd'\r\nimport { PlusOutlined, ArrowRightOutlined } from '@ant-design/icons'\r\nimport LinkButton from '../../components/link-button/link-button'\r\nimport { reqCategorys, reqAddCategory, reqUpdateCategory } from '../../api/index'\r\nimport AddCategory from './add-category'\r\nimport UpdateCategory from './update-category'\r\n\r\nexport default class Category extends Component {\r\n    state = {\r\n        loading: false, // 是否正在获取数据中\r\n        categorys: [],\r\n        subCategorys: [],\r\n        parentId: '0', // 当前需要显示的分类列表的父分类ID\r\n        parentName: '', // 当前需要显示的分类列表的父分类名称\r\n        showState: 0 // 0都不显示,1显示添加一级分类，2显示添加二级分类\r\n    }\r\n    initColums = () => {\r\n        this.columns = [\r\n            {\r\n                title: '分类的名称',\r\n                dataIndex: 'name',\r\n                key: 'name',\r\n                width: '75%'\r\n            },\r\n            {\r\n                title: '操作',\r\n                render: (category) => (\r\n                    <span>\r\n                        <LinkButton onClick={() => this.showAddSubCatory(category)}>修改分类</LinkButton>\r\n                        {this.state.parentId === '0' ? <LinkButton onClick={() => this.showSubCategorys(category)}>查看子分类</LinkButton> : null}\r\n\r\n                    </span>\r\n                )  \r\n            },\r\n\r\n        ];\r\n\r\n    }\r\n\r\n    /*\r\n    异步获取一级/二级分类列表显示\r\n    parentId: 如果没有指定根据状态中的parentId请求, 如果指定了根据指定的请求\r\n    */\r\n    getCategorys = async (parentId) => {\r\n        // 在发请求前, 显示loading\r\n        this.setState({\r\n            loading: true\r\n        })\r\n        parentId = parentId || this.state.parentId // 如果有传入参数则parentId为形参值，否则为state中的parentId\r\n        const result = await reqCategorys(parentId)\r\n        // 在请求完成后, 隐藏loading\r\n        this.setState({ loading: false })\r\n        // console.log(\"parentId\",parentId)\r\n        if (result.status === 0) {\r\n            // 取出分类数组(可能是一级也可能二级的)\r\n            const categorys = result.data\r\n            if (parentId === '0') {\r\n                // 父分类\r\n                this.setState({ categorys: categorys })\r\n            } else {\r\n                // debugger\r\n                this.setState({ subCategorys: categorys })\r\n            }\r\n        } else {\r\n            message.error(\"获取分类列表失败\")\r\n        }\r\n    }\r\n    /*\r\n     显示指定一级分类对象的二子列表\r\n   */\r\n    showSubCategorys = (category) => {\r\n        // 更新状态\r\n        this.setState({\r\n            parentId: category._id,\r\n            parentName: category.name\r\n        }, () => {// 在状态更新且重新render()后执行\r\n            this.getCategorys()\r\n            // setState()不能立即获取最新的状态: 因为setState()是异步更新状态的\r\n            console.log(\"state\", this.state)\r\n        })\r\n\r\n    }\r\n\r\n    showCategorys = () => {\r\n        // 显示父列表\r\n        this.setState({\r\n            parentId: '0',\r\n            subCategorys: [],\r\n            parentName: ''\r\n        })\r\n    }\r\n\r\n    addCategory = () => {\r\n        console.log(\"addCategory()\")\r\n\r\n        // 获取表单数据\r\n        this.form.validateFields(['parentId', 'categoryName']).then(async (values) => {\r\n            // 修改state状态为隐藏\r\n            this.setState({ showState: 0 })\r\n\r\n            // 收集数据, 并提交添加分类的请求\r\n            const { parentId, categoryName } = values\r\n            console.log(\"re0\", values)\r\n            // 每次添加完成的时候，只需将categoryName清除即可，保留parentId，以保留父分类\r\n            this.form.resetFields(['categoryName'])\r\n            const result = await reqAddCategory(parentId, categoryName)\r\n            // 更新数据\r\n            // console.log(\"result\",result)\r\n            if (result.status === 0) {\r\n                // 添加的分类就是当前分类列表下的分类\r\n                if (parentId === this.state.parentId) {\r\n                    // 在一级分类列表下，添加后需要更新列表\r\n                    this.getCategorys()\r\n                } else if (parentId === '0') {// 在二级分类列表下添加一级分类, 重新获取一级分类列表, 但不需要显示一级列表\r\n                    this.getCategorys('0')\r\n                }\r\n            }\r\n\r\n\r\n\r\n\r\n        })\r\n\r\n    }\r\n\r\n    updateSubCategory = () => {\r\n        console.log(\"updateSubCategory()\")\r\n        // console.log(\"form\", this.form)\r\n        this.form.validateFields(['categoryName']).then(async (values) => {\r\n            // console.log(\"取出来表单的value\", values)\r\n            // 1. 隐藏确定框\r\n            this.setState({\r\n                showState: 0\r\n            })\r\n\r\n            // 准备数据\r\n            const categoryId = this.category._id\r\n            const { categoryName } = values\r\n            // 清除输入数据\r\n            this.form.resetFields()\r\n\r\n            // 2. 发请求更新分类\r\n            const result = await reqUpdateCategory(categoryId, categoryName)\r\n            if (result.status === 0) {\r\n                // 3. 重新显示列表\r\n                console.log(\"成功了\", result)\r\n                this.getCategorys()\r\n            }\r\n\r\n        })\r\n\r\n    }\r\n\r\n    showAdd = () => {\r\n        this.setState({ showState: 1 })\r\n    }\r\n\r\n    showAddSubCatory = (category) => {\r\n        // 将category交给this\r\n        this.category = category\r\n        // 更新状态显示\r\n        this.setState({ showState: 2 })\r\n    }\r\n\r\n    handleCancel = () => {\r\n        this.setState({ showState: 0 })\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.initColums()\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getCategorys()\r\n    }\r\n\r\n    render() {\r\n        const { categorys, loading, subCategorys, parentId, parentName, showState } = this.state\r\n        // 读取指定的分类\r\n        const category = this.category || {} // 如果还没有指定一个空对象\r\n\r\n        const title = parentId === '0' ? \"一级分类列表\" : (\r\n            <span>\r\n                <LinkButton onClick={this.showCategorys}>一级分类列表</LinkButton>\r\n                <ArrowRightOutlined />\r\n                <span>{parentName}</span>\r\n            </span>\r\n        )\r\n        const extra = (\r\n            <Button type='primary' onClick={this.showAdd}>\r\n                <span>\r\n                    <PlusOutlined />\r\n                    添加\r\n                </span>\r\n            </Button>\r\n        )\r\n        return (\r\n            <Card title={title} extra={extra}>\r\n                <Table\r\n                    rowKey='_id'\r\n                    columns={this.columns}\r\n                    bordered\r\n                    loading={loading}\r\n                    dataSource={parentId === '0' ? categorys : subCategorys}\r\n                    pagination={{ defaultPageSize: 5, showQuickJumper: true }}\r\n                />\r\n                <Modal\r\n                    title=\"一级分类\"\r\n                    visible={showState === 1}\r\n                    onOk={this.addCategory}\r\n                    onCancel={this.handleCancel}\r\n                >\r\n                    <AddCategory\r\n                        categorys={categorys}\r\n                        parentId={parentId}\r\n                        setForm={(form) => { this.form = form }}\r\n                    />\r\n\r\n                </Modal>\r\n\r\n                <Modal\r\n                    title=\"更新分类\"\r\n                    visible={showState === 2}\r\n                    onOk={this.updateSubCategory}\r\n                    onCancel={this.handleCancel}\r\n                >\r\n                    <UpdateCategory\r\n                        categoryName={category.name}\r\n                        setForm={(form) => { this.form = form }}\r\n                    />\r\n                </Modal>\r\n\r\n            </Card>\r\n\r\n        )\r\n    }\r\n}","/**\r\n * 存放需要修改的常量\r\n */\r\nexport const PAGE_SIZE = 3;\r\nexport const BASE_IMG_URL = \"http://localhost:5000/upload/\";","/*\r\n商品主页\r\n*/\r\nimport React, { Component } from 'react'\r\nimport {\r\n    Card,\r\n    Select,\r\n    Input,\r\n    Button,\r\n    Table,\r\n    message\r\n} from 'antd'\r\nimport {PlusOutlined} from '@ant-design/icons'\r\nimport {reqProducts,reqSearchProducts,reqUpdateStatus} from '../../api/index'\r\nimport LinkButton from '../../components/link-button/link-button'\r\nimport {PAGE_SIZE} from '../../utils/constants'\r\nimport \"./product.less\"\r\n\r\nconst { Option } = Select;\r\nexport default class ProductHome extends Component {\r\n    state = {\r\n        loading:false,\r\n        products:[], // 商品的数组\r\n        total:0, //总页数\r\n        searchName:'',//搜索关键字\r\n        searchType:'productName',//搜索类型\r\n    }\r\n    initColums = ()=>{\r\n        this.columns = [\r\n            {\r\n                title: '商品名称',\r\n                dataIndex: 'name',\r\n                key: 'name',\r\n                // width: '75%'\r\n            },\r\n            {\r\n                title: '商品描述',\r\n                dataIndex: 'desc',\r\n                key: 'desc',\r\n                // width: '75%'\r\n            },\r\n            {\r\n                title: '价格',\r\n                dataIndex: 'price',\r\n                render: (price) => \"¥\" + price\r\n            },\r\n            {\r\n                title: '操作',\r\n                width:100,\r\n                // dataIndex: 'status',\r\n                render: (product) => {\r\n                    const {status,_id} = product\r\n                    const newStatus = status===1?2:1\r\n                    return(\r\n                        <span>\r\n                            <Button \r\n                            type=\"primary\"\r\n                            onClick={()=>this.updateStatus(_id,newStatus)}\r\n                            >{status===1?'上架':'下架'}</Button>\r\n                            <span>{status===1?'在售':'已下架'}</span>\r\n                        </span>\r\n                    )\r\n                }\r\n            },\r\n            {\r\n                title: '状态',\r\n                width:100,\r\n                render: (product) => {\r\n                    return(\r\n                        <span>\r\n                            <LinkButton onClick={()=>this.props.history.push('/product/details',{product})}>详情</LinkButton>\r\n                            <LinkButton onClick={()=>this.props.history.push('/product/addupdate',product)}>修改</LinkButton>\r\n                        </span>\r\n                    )\r\n                }\r\n            },\r\n            \r\n\r\n        ];\r\n    }\r\n\r\n    updateStatus = async (productId, status)=>{\r\n        const result = await reqUpdateStatus(productId,status)\r\n        if(result.status===0){\r\n            message.success(\"更新商品状态成功\")\r\n            this.getProducts(this.pageNum)\r\n        }\r\n\r\n    }\r\n\r\n    getProducts = async (pageNum)=>{\r\n        this.pageNum = pageNum // 保存pageNum, 让其它方法可以看到\r\n        this.setState({loading:true}) // 正在加载\r\n        const {searchName,searchType} = this.state\r\n        // console.log(\"search\",searchName,searchType)\r\n        let result;\r\n        if(searchName){\r\n            // 如果有要搜索的内容\r\n            // result = await reqSearchProducts({pageNum,pageSize:PAGE_SIZE,searchName,searchType})\r\n            result = await reqSearchProducts({pageNum, pageSize: PAGE_SIZE, searchName, searchType})\r\n            // console.log(\"result\",result)\r\n            // debugger\r\n        }else{\r\n            result = await reqProducts(pageNum,PAGE_SIZE)\r\n        }\r\n        this.setState({loading:false}) // 加载成功\r\n        if(result.status===0){\r\n            const {list,total} = result.data\r\n            this.setState({products:list,total:total})\r\n        }\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.initColums()\r\n    }\r\n\r\n    componentDidMount(){\r\n        // 发送请求\r\n        this.getProducts(1)\r\n    }\r\n\r\n    render() {\r\n        const {products,loading,total,searchName,searchType} = this.state\r\n        const title = (\r\n            <span>\r\n                <Select \r\n                value={searchType}\r\n                style={{width:'150px'}}\r\n                onChange={value=>this.setState({searchType:value})}\r\n                >\r\n                    {/* // 注意value的大小写不要大写 */}\r\n                    <Option value=\"productName\">按名称搜索</Option>\r\n                    <Option value=\"productDesc\">按描述搜索</Option> \r\n                </Select>\r\n                <Input \r\n                style={{width:'150px',margin:\"0 15px\"}} \r\n                value={searchName}\r\n                onChange={e=>this.setState({searchName:e.target.value})}\r\n                ></Input>\r\n                <Button type=\"primary\" onClick={()=>this.getProducts(1)}>搜索</Button>\r\n            </span>\r\n        )\r\n        const extra = (\r\n            <Button type='primary' onClick={()=>this.props.history.push('/product/addupdate')}>\r\n                <PlusOutlined/>\r\n                添加商品\r\n            </Button>\r\n        )\r\n\r\n        return (\r\n            <Card\r\n                title={title}\r\n                extra={extra}\r\n            >\r\n                <Table\r\n                    rowKey='_id'\r\n                    columns={this.columns}\r\n                    bordered\r\n                    loading={loading}\r\n                    dataSource={products}\r\n                    \r\n                    pagination={{ \r\n                        total:total,\r\n                        defaultPageSize: PAGE_SIZE,\r\n                        showQuickJumper: true,\r\n                        current:this.pageNum,\r\n                        onChange:this.getProducts\r\n                    }}\r\n                />\r\n            </Card>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { Upload, Modal, message } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport {reqDeleteImg} from '../../api/index'\r\nimport { BASE_IMG_URL } from '../../utils/constants';\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction getBase64(file) {\r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = error => reject(error);\r\n    });\r\n}\r\n\r\nexport default class PicturesWall extends React.Component {\r\n    static propTypes = {\r\n        imgs:PropTypes.array\r\n    }\r\n    constructor(props){\r\n        super(props)\r\n\r\n        // const arr1 = []\r\n        // const s1 = ''\r\n        // console.log(\"arr1\",arr1)\r\n        // console.log(\"s1\",s1)\r\n        // console.log(\"arr1==s1?\",arr1===s1)\r\n        // console.log(\"s1===undefined\",s1==undefined)\r\n        // if(arr1){\r\n        //     console.log(\"zifuchuancunzai\")\r\n        // }else{\r\n        //     console.log(\"zifuchuan!\")\r\n        // }\r\n\r\n        // 看看是否imgs是空数组\r\n        const {imgs} = this.props\r\n        let fileList = [] // 必须开始的时候定义数组，否则会出现undefined情况\r\n        if(imgs&&imgs.length>0){\r\n            // 如果imgs不是空，且数组中有值\r\n            fileList = imgs.map((img,index)=>(\r\n                {\r\n                    uid: -index,// 标识是否显示大图预览Modal\r\n                    name: img,// 大图的url\r\n                    status: 'done',\r\n                    url: BASE_IMG_URL+img,\r\n                }\r\n            ) \r\n            )\r\n        }\r\n        this.state = {\r\n            previewVisible: false,\r\n            previewImage: '',\r\n            previewTitle: '',\r\n            fileList\r\n        }\r\n    }\r\n\r\n    /*\r\n     获取上传图片名称的数组\r\n     */\r\n    getImgs = ()=>{\r\n        return this.state.fileList.map(file=>file.name)\r\n    }\r\n\r\n    /*\r\n    隐藏Modal\r\n     */\r\n    handleCancel = () => this.setState({ previewVisible: false });\r\n\r\n    handlePreview = async file => {\r\n        console.log('handlePreview()', file)\r\n        // 显示指定file对应的大图\r\n        if (!file.url && !file.preview) {\r\n            file.preview = await getBase64(file.originFileObj);\r\n        }\r\n\r\n        this.setState({\r\n            previewImage: file.url || file.preview,\r\n            previewVisible: true,\r\n            previewTitle: file.name || file.url.substring(file.url.lastIndexOf('/') + 1),\r\n        });\r\n    };\r\n\r\n    /*\r\n    file: 当前操作的图片文件(上传/删除)\r\n    fileList: 所有已上传图片文件对象的数组\r\n     */\r\n    handleChange = async ({ file, fileList }) => {\r\n        //   console.log(\"执行了这个\")\r\n        console.log('handleChange()', file, file.status, fileList.length, file === fileList[fileList.length - 1])\r\n        this.setState({ fileList })\r\n        // 一旦上传成功, 将当前上传的file的信息修正(name, url)\r\n        if (file.status === 'done') {\r\n            // 上传成功,需要将file的名字和url修改一下，并添加到fileList中\r\n            const result = file.response  // {status: 0, data: {name: 'xxx.jpg', url: '图片地址'}}\r\n            if(result.status===0){\r\n                file = fileList[fileList.length - 1]\r\n                file.name = result.data.name\r\n                file.url = result.data.url\r\n            }else{\r\n                message.error(\"图片上传失败\")\r\n            }\r\n        }else if(file.status==='removed'){\r\n            // 图片移除，发送请求，将后台的图片移除\r\n            const result = await reqDeleteImg(file.name)\r\n            if(result.status===0){\r\n                message.success(\"图片删除成功！\")\r\n            }else{\r\n                message.error(\"图片删除失败！\")\r\n            }\r\n        }\r\n}\r\n\r\n    render() {\r\n        const { previewVisible, previewImage, fileList, previewTitle } = this.state;\r\n        // debugger\r\n        const uploadButton = (\r\n            <div>\r\n                <PlusOutlined />\r\n                <div style={{ marginTop: 8 }}>Upload</div>\r\n            </div>\r\n        );\r\n        return (\r\n            <>\r\n                <Upload\r\n                    action=\"/manage/img/upload\"/*上传图片的接口地址*/\r\n                    accept='image/*'/*只接收图片格式*/\r\n                    name='image' /*请求参数名*/\r\n                    listType=\"picture-card\"\r\n                    fileList={fileList}\r\n                    onPreview={this.handlePreview}\r\n                    onChange={this.handleChange}\r\n                >\r\n                    {fileList.length >= 4 ? null : uploadButton}\r\n                </Upload>\r\n                <Modal\r\n                    visible={previewVisible}\r\n                    title={previewTitle}\r\n                    footer={null}\r\n                    onCancel={this.handleCancel}\r\n                >\r\n                    <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { EditorState, convertToRaw,ContentState } from 'draft-js';\r\nimport PropTypes from 'prop-types'\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport htmlToDraft from 'html-to-draftjs';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css'\r\n\r\nexport default class RichTextEditor extends Component {\r\n\r\n  static propTypes = {\r\n    detail: PropTypes.string\r\n  }\r\n  \r\n  constructor(props){\r\n    super(props)\r\n\r\n    const html = this.props.detail\r\n    if(html){\r\n        // 如果html中有值,根据html格式字符串创建一个对应的编辑对象\r\n        const contentBlock = htmlToDraft(html)\r\n        const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks)\r\n        const editorState = EditorState.createWithContent(contentState)\r\n        this.state = {\r\n            editorState\r\n        }\r\n    }else{\r\n        // 如果html没有值，则创建一个空的编辑对象\r\n        this.state = {\r\n            editorState: EditorState.createEmpty(),\r\n        }\r\n    }\r\n  }\r\n\r\n  onEditorStateChange = (editorState) => {\r\n    this.setState({\r\n      editorState,\r\n    });\r\n  };\r\n\r\n  getDetail = () => {\r\n    // 返回输入数据对应的html格式的文本\r\n    return draftToHtml(convertToRaw(this.state.editorState.getCurrentContent()))\r\n  }\r\n\r\n  uploadImageCallBack(file) {\r\n    return new Promise(\r\n      (resolve, reject) => {\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.open('POST', '/manage/img/upload');\r\n        xhr.setRequestHeader('Authorization', 'Client-ID XXXXX');\r\n        const data = new FormData();\r\n        data.append('image', file);\r\n        xhr.send(data);\r\n        xhr.addEventListener('load', () => {\r\n          const response = JSON.parse(xhr.responseText);\r\n          const url = response.data.url\r\n          resolve({data:{link:url}});\r\n        });\r\n        xhr.addEventListener('error', () => {\r\n          const error = JSON.parse(xhr.responseText);\r\n          reject(error);\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { editorState } = this.state;\r\n    return (\r\n      <div>\r\n        <Editor\r\n          editorState={editorState}\r\n          editorStyle={{border:'1px solid black',minHeight:200,paddingLeft: 10}}\r\n          onEditorStateChange={this.onEditorStateChange}\r\n          toolbar={{\r\n            inline: { inDropdown: true },\r\n            list: { inDropdown: true },\r\n            textAlign: { inDropdown: true },\r\n            link: { inDropdown: true },\r\n            history: { inDropdown: true },\r\n            image: { uploadCallback: this.uploadImageCallBack, alt: { present: true, mandatory: true } },\r\n          }}\r\n        />\r\n        {/* <textarea\r\n          disabled\r\n          value={draftToHtml(convertToRaw(editorState.getCurrentContent()))}\r\n        /> */}\r\n      </div>\r\n    );\r\n  }\r\n}","/*\r\n用户登陆的路由组件\r\n*/\r\nimport React, { Component } from 'react'\r\nimport {\r\n    Card,\r\n    Form,\r\n    Input,\r\n    Cascader,\r\n    Button,\r\n    message\r\n} from 'antd'\r\nimport { ArrowLeftOutlined } from '@ant-design/icons'\r\nimport LinkButton from '../../components/link-button/link-button'\r\nimport { reqCategorys } from '../../api/index'\r\nimport PicturesWall from './pictures-wall'\r\nimport RichTextEditor from './rich-text-editor'\r\nimport { reqAddOrUpdateProduct } from '../../api'\r\n\r\nconst { Item } = Form\r\nconst { TextArea } = Input\r\n\r\nexport default class AddUpdate extends Component {\r\n\r\n    state = {\r\n        options: [],\r\n    }\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.formRef = React.createRef()\r\n        // 创建用来保存ref标识的标签对象的容器\r\n        this.pw = React.createRef()\r\n        this.editor = React.createRef()\r\n    }\r\n    validatePrice = (rule, value) => {\r\n        if (value * 1 >= 0) {\r\n            // 通过\r\n            return Promise.resolve();\r\n        }\r\n        // 拒绝并提示\r\n        return Promise.reject('价格必须大于0!')\r\n    }\r\n    submit = () => {\r\n        const form = this.formRef.current\r\n        form.validateFields(['name', 'desc', 'price', 'categoryIds']).then(async (values) => {\r\n            console.log(\"validateFields\", values)\r\n            \r\n            // 1. 收集数据, 并封装成product对象\r\n            const { name, desc, price, categoryIds } = values\r\n            let pCategoryId, categoryId\r\n            if (categoryIds.length === 1) {\r\n                pCategoryId = '0'\r\n                categoryId = categoryIds[0]\r\n            } else {\r\n                pCategoryId = categoryIds[0]\r\n                categoryId = categoryIds[1]\r\n            }\r\n\r\n            const imgs = this.pw.current.getImgs()// 使用pw容器对象中<PicturesWall/>组件的函数\r\n            const detail = this.editor.current.getDetail()// 使用pw容器对象中<PicturesWall/>组件的函数\r\n\r\n            const product = { name, desc, price, imgs, detail, pCategoryId, categoryId }\r\n            console.log(\"product\",product)\r\n            // 如果是更新, 需要添加_id\r\n            if (this.isUpdate) {\r\n                product._id = this.product._id\r\n            }\r\n\r\n            // 2. 调用接口请求函数去添加/更新\r\n            const result = await reqAddOrUpdateProduct(product)\r\n\r\n            // 3. 根据结果提示\r\n            if (result.status === 0) {\r\n                message.success(`${this.isUpdate ? '更新' : '添加'}商品成功!`)\r\n                this.props.history.goBack()\r\n            } else {\r\n                message.error(`${this.isUpdate ? '更新' : '添加'}商品失败!`)\r\n            }\r\n\r\n        })\r\n    }\r\n    loadData = async (selectedOptions) => {\r\n        const targetOption = selectedOptions[0];\r\n        targetOption.loading = true;\r\n\r\n        // 获取二级列表\r\n        const subCategorys = await this.getCategorys(targetOption.value)// 当前选中一级列表的id\r\n        // 获取二级列表成功\r\n        targetOption.loading = false;\r\n        if (subCategorys && subCategorys.length > 0) {\r\n            // 如果有二级分类，且二级分类不为空,\r\n            const childOptions = subCategorys.map(c => (\r\n                {\r\n                    label: c.name,\r\n                    value: c._id,\r\n                    isLeaf: true\r\n                }\r\n            ))\r\n            targetOption.children = childOptions\r\n        } else {\r\n            // 没有二级分类,应该设置为true，否则会再次请求，一级分类就无法选中\r\n            targetOption.isLeaf = true\r\n        }\r\n        this.setState({\r\n            options: [...this.state.options],\r\n        })\r\n    };\r\n    initOptions = async (categorys) => {\r\n        const options = categorys.map(c =>\r\n            ({\r\n                value: c._id,\r\n                label: c.name,\r\n                isLeaf: false\r\n            })\r\n        )\r\n        // 如果是二级分类的更新\r\n        const { isUpdate, product } = this\r\n        const { pCategoryId } = product\r\n        if (isUpdate && pCategoryId !== '0') {\r\n            // 如果是更新，而且有二级分类，要获取一下二级分类列表\r\n            const subCategorys = await this.getCategorys(pCategoryId)\r\n            // 如果有二级分类，且二级分类不为空,\r\n            const childOptions = subCategorys.map(c => (\r\n                {\r\n                    label: c.name,\r\n                    value: c._id,\r\n                    isLeaf: true\r\n                }\r\n            ))\r\n            // 找到关联的option,此时targetOption指向的内存地址为某一个option的地址，如果是append的，那么options也会改变，赋值options不会改变\r\n            const targetOption = options.find(option => option.value === pCategoryId)\r\n            // 将childoptions关联到对应option上\r\n            targetOption.children = childOptions\r\n        }\r\n        // 更新state\r\n        this.setState({\r\n            options\r\n        })\r\n    }\r\n    getCategorys = async (parentId) => {\r\n        const result = await reqCategorys(parentId)\r\n        if (result.status === 0) {\r\n            const categorys = result.data\r\n            // 如果是一级分类列表\r\n            if (parentId === '0') {\r\n                this.initOptions(categorys)\r\n            } else {\r\n                // 是二级分类列表\r\n                return categorys // 返回二级列表 ==> 当前async函数返回的promsie就会成功且value为categorys\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        // 取出location携带的product信息，如果是添加商品product没有值，否则有值\r\n        const product = this.props.location.state\r\n        // debugger\r\n        // 保存是否为更新的标识\r\n        this.isUpdate = !!product\r\n        this.product = product || {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getCategorys(\"0\")\r\n    }\r\n    render() {\r\n        const { isUpdate, product } = this\r\n        const { pCategoryId, categoryId, imgs, detail } = product\r\n        const categoryIds = []\r\n        // 用来接收级联分组的id\r\n        if (isUpdate) {\r\n            // 如果是一级分类的商品\r\n            if (pCategoryId === '0') {\r\n                categoryIds.push(categoryId)\r\n            } else {\r\n                // 如果是二级分类的商品\r\n                categoryIds.push(pCategoryId)\r\n                categoryIds.push(categoryId)\r\n            }\r\n        }\r\n\r\n        const layout = {\r\n            labelCol: { span: 2 },\r\n            wrapperCol: { span: 8 },\r\n        }\r\n\r\n        const title = (\r\n            <span>\r\n                <LinkButton onClick={() => this.props.history.goBack()}>\r\n                    <ArrowLeftOutlined />\r\n                </LinkButton>\r\n                <span style={{ marginLeft: 10 }}>{isUpdate ? '修改商品' : '添加商品'}</span>\r\n            </span>\r\n        )\r\n\r\n        return (\r\n            <Card title={title}>\r\n                <Form\r\n                    {...layout}\r\n                    ref={this.formRef}\r\n                    initialValues={{ 'name': product.name, 'desc': product.desc, 'price': product.price, 'categoryIds': categoryIds }}\r\n                >\r\n                    <Item\r\n                        label=\"商品名称：\"\r\n                        name=\"name\"\r\n                        rules={[{ required: true, message: '商品名称必须输入!' }]}\r\n                    >\r\n                        <Input placeholder=\"请输入商品名称\"></Input>\r\n                    </Item>\r\n                    <Item\r\n                        label=\"商品描述：\"\r\n                        name=\"desc\"\r\n                        rules={[{ required: true, message: '商品描述必须输入!' }]}\r\n                    >\r\n                        <TextArea\r\n                            placeholder=\"请输入商品描述\"\r\n                            autoSize={{ minRows: 2, maxRows: 6 }}\r\n                        />\r\n                    </Item>\r\n                    <Item\r\n                        label=\"商品价格：\"\r\n                        name=\"price\"\r\n                        rules={[\r\n                            { required: true, message: '必须输入商品价格' },\r\n                            { validator: this.validatePrice }\r\n                        ]}\r\n                    >\r\n                        <Input type='number' placeholder='请输入商品价格' addonAfter='元' />\r\n                    </Item>\r\n                    <Item\r\n                        label=\"商品分类：\"\r\n                        name=\"categoryIds\"\r\n                        rules={[{ required: true, message: '必须指定商品分类!' }]}\r\n                    >\r\n                        <Cascader\r\n                            placeholder=\"请输入商品分类\"\r\n                            options={this.state.options}\r\n                            loadData={this.loadData}\r\n                        />\r\n                    </Item>\r\n                    <Item label=\"商品图片：\">\r\n                        <PicturesWall ref={this.pw} imgs={imgs} />\r\n                    </Item>\r\n                    <Item label=\"商品详情：\" labelCol={{ span: 2 }} wrapperCol={{ span: 20 }}>\r\n                        <RichTextEditor ref={this.editor} detail={detail} />\r\n                    </Item>\r\n                    <Item >\r\n                        <Button type=\"primary\" onClick={this.submit}>提交</Button>\r\n                    </Item>\r\n                </Form>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\n/*\r\n1. 子组件调用父组件的方法: 将父组件的方法以函数属性的形式传递给子组件, 子组件就可以调用\r\n2. 父组件调用子组件的方法: 在父组件中通过ref得到子组件标签对象(也就是组件对象), 调用其方法\r\n */\r\n\r\n/*\r\n使用ref\r\n1. 创建ref容器: thi.pw = React.createRef()\r\n2. 将ref容器交给需要获取的标签元素: <PictureWall ref={this.pw} />\r\n3. 通过ref容器读取标签元素: this.pw.current\r\n */","/*\r\n用户登陆的路由组件\r\n*/\r\nimport React, { Component } from 'react'\r\nimport {Card,List,} from 'antd'\r\nimport {ArrowLeftOutlined} from '@ant-design/icons'\r\nimport LinkButton from '../../components/link-button/link-button'\r\nimport {BASE_IMG_URL} from '../../utils/constants'\r\nimport {reqCategory} from '../../api'\r\n\r\nconst Item = List.Item\r\n\r\nexport default class Details extends Component {\r\n    state = {\r\n        cName1: '', // 一级分类名称\r\n        cName2: '', // 二级分类名称\r\n    }\r\n    \r\n    async componentDidMount(){ // 也可以自己定义函数\r\n        // 得到当前商品的分类ID\r\n        const {pCategoryId,categoryId} = this.props.location.state.product\r\n        if(pCategoryId==='0'){ // 如果是一级分类下的商品\r\n            const result = await reqCategory(categoryId)\r\n            // debugger\r\n            const cName1 = result.data.name\r\n            this.setState({cName1})\r\n        }else{\r\n            // 在普通商品下的分类\r\n             /*\r\n                //通过多个await方式发多个请求: 后面一个请求是在前一个请求成功返回之后才发送\r\n                const result1 = await reqCategory(pCategoryId) // 获取一级分类列表\r\n                const result2 = await reqCategory(categoryId) // 获取二级分类\r\n                const cName1 = result1.data.name\r\n                const cName2 = result2.data.name\r\n                */\r\n               // 一次性发送多个请求, 只有都成功了, 才正常处理\r\n            const results = await Promise.all([reqCategory(pCategoryId),reqCategory(categoryId)])\r\n            const cName1 = results[0].data.name\r\n            const cName2 = results[1].data.name\r\n            this.setState({cName1,cName2})\r\n        }\r\n        \r\n    }\r\n    render() {\r\n        const {name,desc,price,imgs,detail} = this.props.location.state.product\r\n        const {cName1,cName2} = this.state\r\n        const title=(\r\n            <span>\r\n                <LinkButton onClick={()=>this.props.history.goBack()}>\r\n                    <ArrowLeftOutlined />\r\n                </LinkButton>\r\n                <span style={{marginLeft:10}}>商品详情</span>\r\n            </span>\r\n        )\r\n        return (\r\n            <Card\r\n            title={title}\r\n            className=\"product-details\"\r\n            >\r\n                <List>\r\n                    <Item>\r\n                        <span className=\"left\">商品名称:</span>\r\n                        <span>{name}</span>\r\n                    </Item>\r\n                    <Item>\r\n                        <span className=\"left\">商品描述:</span>\r\n                        <span>{desc}</span>\r\n                    </Item>\r\n                    <Item>\r\n                        <span className=\"left\">商品价格:</span>\r\n                        <span>{price}元</span>\r\n                    </Item>\r\n                    <Item>\r\n                        <span className=\"left\">所属分类:</span>\r\n                        <span>{cName1}{cName2?('-->'+cName2):''}</span>\r\n                    </Item>\r\n                    <Item>\r\n                        <span className=\"left\">商品图片：</span>\r\n                        {\r\n                            imgs.map((img,key)=>\r\n                                <img\r\n                                key={key} \r\n                                src={BASE_IMG_URL+img} \r\n                                alt=\"img\"\r\n                                className=\"img\"\r\n                                />\r\n                            )\r\n                        }\r\n                        \r\n                    </Item>\r\n                    <Item>\r\n                        <span className=\"left\">商品详情：</span>\r\n                        <span dangerouslySetInnerHTML={{__html:detail}}></span>\r\n                    </Item>\r\n                </List>\r\n    \r\n            </Card>\r\n        )\r\n    }\r\n}","/*\r\n用户登陆的路由组件\r\n*/\r\nimport React, { Component } from 'react'\r\nimport {Switch,Route,Redirect} from 'react-router-dom'\r\nimport ProductHome from './home'\r\nimport AddUpdate from './add-update'\r\nimport Details from './details'\r\n\r\nexport default class Product extends Component {\r\n    render() {\r\n        return (\r\n            <Switch>\r\n                <Route path='/product' component={ProductHome} exact></Route>\r\n                <Route path='/product/addupdate' component={AddUpdate}></Route>\r\n                <Route path='/product/details' component={Details}></Route>\r\n                <Redirect to='/product'></Redirect>\r\n            </Switch>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport {\r\n    Select,\r\n    Form,\r\n    Input,\r\n} from 'antd'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Item = Form.Item\r\nconst { Option } = Select\r\n\r\nexport default class UserForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.formRef = React.createRef()\r\n    }\r\n    static propTypes = {\r\n        roles: PropTypes.array.isRequired,\r\n        user: PropTypes.object,\r\n        setForm: PropTypes.func.isRequired\r\n    }\r\n    componentDidMount() {\r\n        // 将form对象通过setForm()传递父组件\r\n        const form = this.formRef.current\r\n        // 尝试修改每次的修改\r\n\r\n        // console.log(\"这是form\",form)\r\n        this.props.setForm(form)\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps,nextState){\r\n        if(nextProps.user!=this.props.user){\r\n            // console.log(\"应该更新一下\")\r\n            // console.log(\"props\",nextProps.user)\r\n            // const {categoryName} = this.props\r\n            // console.log(\"分类\",categoryName)\r\n            this.formRef.current.setFieldsValue({'username': nextProps.user.username, 'phone': nextProps.user.phone,\r\n             'email': nextProps.user.email, 'role_id': nextProps.user.role_id });\r\n            return true\r\n        }else{\r\n            return false\r\n        }\r\n   }\r\n\r\n    render() {\r\n        const { roles} = this.props\r\n        const user = this.props.user\r\n        console.log(\"user\",user)\r\n        const layout = {\r\n            labelCol: { span: 3 },\r\n            wrapperCol: { span: 20 },\r\n        };\r\n        return (\r\n            <Form\r\n                {...layout}\r\n                ref={this.formRef}\r\n                initialValues={{ 'username': user.username, 'phone': user.phone, 'email': user.email, 'role_id': user.role_id }}\r\n            >\r\n                <Item label=\"用户名\" name=\"username\">\r\n                    <Input placeholder=\"请输入用户名\"></Input>\r\n                </Item>\r\n                {\r\n                    user._id ? null : <Item label=\"密码\" name=\"password\">\r\n                        <Input placeholder=\"请输入密码\"></Input>\r\n                    </Item>\r\n                }\r\n\r\n                <Item label=\"手机号\" name=\"phone\">\r\n                    <Input placeholder=\"请输入手机号\"></Input>\r\n                </Item>\r\n                <Item label=\"邮箱\" name=\"email\">\r\n                    <Input placeholder=\"请输入邮箱\"></Input>\r\n                </Item>\r\n                <Item label=\"角色\" name=\"role_id\">\r\n                    <Select placeholder=\"请选择角色\">\r\n                        {roles.map(role => (\r\n                            <Option value={role._id} key={role._id}>{role.name}</Option>\r\n                        ))}\r\n                    </Select>\r\n                </Item>\r\n            </Form>\r\n        )\r\n    }\r\n}","/*\r\n用户登陆的路由组件\r\n*/\r\nimport React, { Component } from 'react'\r\n\r\nimport { Button, Card, Table, message, Modal } from 'antd'\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport { PAGE_SIZE } from '../../utils/constants'\r\nimport LinkButton from '../../components/link-button/link-button'\r\nimport { formateTime } from '../../utils/dateUtils'\r\nimport { reqUserList, reqDelelteUser, reqAddUser, reqAddOrUpdateUser } from '../../api'\r\nimport UserForm from './user-form'\r\n\r\nexport default class User extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            users: [],\r\n            showState: false,\r\n            loading: false,\r\n            roles: []\r\n        }\r\n    }\r\n\r\n    initColumns = () => {\r\n        this.columns = [\r\n            {\r\n                title: '用户名',\r\n                dataIndex: 'username',\r\n            },\r\n            {\r\n                title: '邮箱',\r\n                dataIndex: 'email',\r\n            },\r\n            {\r\n                title: '电话',\r\n                dataIndex: 'phone',\r\n            },\r\n            {\r\n                title: '注册时间',\r\n                dataIndex: 'create_time',\r\n                render: formateTime\r\n            },\r\n            {\r\n                title: '所属角色',\r\n                dataIndex: 'role_id',\r\n                render: (role_id) => this.roleNames[role_id]\r\n            },\r\n            {\r\n                title: '操作',\r\n                render: (user) => (\r\n                    <span>\r\n                        <LinkButton onClick={() => this.showUpdateUser(user)}>修改</LinkButton>\r\n                        <LinkButton onClick={() => this.DeleteUser(user)}>删除</LinkButton>\r\n                    </span>\r\n                )\r\n            },\r\n\r\n        ];\r\n    }\r\n    /*\r\n  根据role的数组, 生成包含所有角色名的对象(属性名用角色id值)\r\n   */\r\n    initRoles = (roles) => {\r\n        this.roleNames = roles.reduce((pre, role) => {\r\n            pre[role._id] = role.name\r\n            return pre\r\n        }, {})\r\n        console.log(\"roleNames\", this.roleNames)\r\n    }\r\n    showUpdateUser = (user) => {\r\n        this.user = user\r\n        // console.log(\"更新用户\")\r\n        this.setState({\r\n            showState: true\r\n        })\r\n    }\r\n\r\n    addOrUpdateUser = () => {\r\n        // console.log(\"addOrUpdateUser()\")\r\n        // 收集数据\r\n        this.form.validateFields().then(async (user) => {\r\n            // console.log('values',values)\r\n            // const {username,password,email,phone,role_id} = values\r\n            // 如果是更新, 需要给user指定_id属性\r\n            if (this.user) {\r\n                user._id = this.user._id\r\n            }\r\n            const result = await reqAddOrUpdateUser(user)\r\n            this.setState({ showState: false })\r\n            if (result.status === 0) {\r\n                message.success(`${this.user ? '修改' : '添加'}用户成功`)\r\n                this.getUsers()\r\n            } else {\r\n                message.error(result.msg)\r\n            }\r\n        })\r\n    }\r\n\r\n    getUsers = async () => {\r\n        this.setState({ loading: true })\r\n        const result = await reqUserList()\r\n        this.setState({ loading: false })\r\n        console.log(\"userList\", result)\r\n        if (result.status === 0) {\r\n            const { users, roles } = result.data\r\n            this.initRoles(roles)\r\n            this.setState({\r\n                users, roles\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    DeleteUser = (user) => {\r\n        Modal.confirm({\r\n            title: `删除用户${user.username}吗？`,\r\n            icon: <ExclamationCircleOutlined />,\r\n            okText: '确认',\r\n            cancelText: '取消',\r\n            onOk: async () => {\r\n                const { _id } = user\r\n                const result = await reqDelelteUser(_id)\r\n                if (result.status === 0) {\r\n                    console.log(\"result\", result)\r\n                    message.success(\"删除用户成功\")\r\n                    this.getUsers()\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.initColumns()\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getUsers()\r\n    }\r\n\r\n    render() {\r\n        const { users, showState, loading, roles } = this.state\r\n        const user = this.user || {}\r\n        // debugger\r\n        const title = (\r\n            <Button type=\"primary\" onClick={() => {\r\n                this.user = null\r\n                this.setState({\r\n                    showState: true\r\n                })\r\n            }}\r\n            >添加用户</Button>\r\n        )\r\n        return (\r\n            <Card title={title}>\r\n                <Table\r\n                    rowKey='_id'\r\n                    columns={this.columns}\r\n                    bordered\r\n                    loading={loading}\r\n                    dataSource={users}\r\n                    pagination={{ defaultPageSize: PAGE_SIZE, showQuickJumper: true }}\r\n                />\r\n                <Modal\r\n                    title={user._id ? '更改用户' : '添加用户'}\r\n                    visible={showState}\r\n                    onOk={this.addOrUpdateUser}\r\n                    onCancel={() => this.setState({ showState: false })}\r\n                >\r\n                    <UserForm ref={this.formRef} roles={roles} user={user} setForm={(form) => { this.form = form }} />\r\n                </Modal>\r\n            </Card>\r\n        )\r\n    }\r\n}","/*\r\n用户登陆的路由组件\r\n*/\r\nimport React, { Component } from 'react'\r\nimport {Select,Form,Input} from 'antd'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Item = Form.Item;\r\nconst { Option } = Select;\r\n\r\nexport default class AddRole extends Component {\r\n    // 通过 Ref 来获取 Form 实例\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.formRef = React.createRef()\r\n    }\r\n    \r\n\r\n    static propTypes = {\r\n        setForm:PropTypes.func.isRequired\r\n    } \r\n\r\n    // shouldComponentUpdate(nextProps,nextState){\r\n    //     if(nextProps.parentId!=this.props.parentId){\r\n    //         // 判断是否需要更新Item中的值，如果需要更新，则重新渲染\r\n    //         this.formRef.current.setFieldsValue({'parentId':nextProps.parentId});\r\n    //         console.log(\"parentId对比\",nextProps.parentId)\r\n    //         return true\r\n    //     }else{\r\n    //         return false\r\n    //     }\r\n    // }\r\n\r\n    componentDidMount () {\r\n        // 将form对象通过setForm()传递父组件\r\n        const form = this.formRef.current\r\n        // 尝试修改每次的修改\r\n        \r\n        // console.log(\"这是form\",form)\r\n        this.props.setForm(form) \r\n    }\r\n\r\n    render() {\r\n        // const {categorys,parentId} = this.props \r\n        // console.log(\"wode parentID\",parentId)\r\n        return (\r\n            <Form\r\n                ref={this.formRef}\r\n                // initialValues={{parentId:'0'}}\r\n            >\r\n                <Item \r\n                name='roleName'\r\n                label='角色名称'\r\n                rules={[\r\n                    {required: true, message: '角色名称必须输入'}\r\n                ]}\r\n                >\r\n                    <Input placeholder=\"请输入角色名称\"></Input>\r\n                </Item>\r\n            </Form>\r\n        )\r\n    }\r\n}","/*\r\n用户登陆的路由组件\r\n*/\r\nimport React, { Component } from 'react'\r\nimport { Form, Input, Tree } from 'antd'\r\nimport PropTypes from 'prop-types'\r\nimport menuList from '../../config/menuConfig'\r\n\r\nconst Item = Form.Item;\r\n\r\nconst { TreeNode } = Tree;\r\n\r\nexport default class UpdateRole extends Component {\r\n    // 通过 Ref 来获取 Form 实例\r\n    // 同样的，你可以不使用createRef()方法而用this.refs.XXX也可以\r\n    // formRef = React.createRef()\r\n\r\n    static propTypes = {\r\n        role: PropTypes.object\r\n    }\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n        const {menus} = this.props.role\r\n\r\n        this.state = {\r\n            checkedKeys:menus\r\n        }\r\n    }\r\n\r\n    getMenus = (menuList)=>{\r\n        return menuList.reduce((pre,item)=>{\r\n            pre.push(\r\n                <TreeNode title={item.title} key={item.key}>\r\n                    {item.children?this.getMenus(item.children):null}\r\n                </TreeNode>\r\n            )\r\n            return pre\r\n        },[])\r\n    }\r\n\r\n    getAuth = ()=>this.state.checkedKeys\r\n\r\n    onCheck = checkedKeys => {\r\n        console.log('onCheck', checkedKeys);\r\n        this.setState({ checkedKeys });\r\n    };\r\n\r\n    componentWillMount(){\r\n        this.menuTreeNodes = this.getMenus(menuList)\r\n    }\r\n    /*\r\n    在render之前调用，只有props发生改变时才调用，因为点击取消的时候，\r\n    并不会重新刷新组件，只是重新render一下，而且render似乎没有必要，考虑用shouldComponetUpdate优化\r\n     */\r\n    \r\n    UNSAFE_componentWillReceiveProps(nextProps){\r\n        // console.log(\" UNSAFE_componentWillReceiveProps\",nextProps)\r\n        const menus = nextProps.role.menus\r\n        this.setState({\r\n            checkedKeys:menus\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { role } = this.props\r\n        // debugger\r\n        const {checkedKeys} = this.state\r\n        return (\r\n            <div>\r\n                <Item\r\n                    label='角色名称'\r\n                >\r\n                    <Input value={role.name} disabled></Input>\r\n                </Item>\r\n                <Item>\r\n                    <Tree\r\n                        checkable\r\n                        defaultExpandAll\r\n                        checkedKeys={checkedKeys}\r\n                        onCheck = {this.onCheck}\r\n                    >\r\n                        {this.menuTreeNodes}\r\n                    </Tree>\r\n                </Item>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","/*\r\n用户登陆的路由组件\r\n*/\r\nimport React, { Component } from 'react'\r\nimport {\r\n    Card,\r\n    Button,\r\n    Table,\r\n    Modal,\r\n    message\r\n} from 'antd'\r\nimport { PAGE_SIZE } from '../../utils/constants'\r\nimport {reqRoles} from '../../api'\r\nimport AddRole from './add-form'\r\nimport UpdateRole from './update-form'\r\nimport {reqAddRole,reqUpdateRole} from '../../api'\r\nimport {formateTime} from '../../utils/dateUtils'\r\nimport memoryUtils from '../../utils/memoryUtils' \r\nimport storageUtils from \"../../utils/storageUtils\";\r\n\r\nexport default class Role extends Component {\r\n    \r\n    constructor(props){\r\n        super(props)\r\n        \r\n        this.auth = React.createRef()\r\n\r\n        this.state = {\r\n            roles: [],// 空的用户角色\r\n            role:{},// 当前选中\r\n            isShowAdd: false,\r\n            isShowUpdate:false\r\n        }\r\n\r\n    }\r\n    initColumns = () => {\r\n        this.columns = [\r\n            {\r\n                title: '角色名称',\r\n                dataIndex: 'name'\r\n            },\r\n            {\r\n                title: '创建时间',\r\n                dataIndex: 'create_time',\r\n                render: (create_time) => formateTime(create_time)\r\n            },\r\n            {\r\n                title: '授权时间',\r\n                dataIndex: 'auth_time',\r\n                render: formateTime\r\n            },\r\n            {\r\n                title: '授权人',\r\n                dataIndex: 'auth_name'\r\n            },\r\n        ]\r\n    }\r\n\r\n    onRow = (role)=>{\r\n        return{\r\n            onClick: event => {\r\n                // console.log('row onClick()', role)\r\n                this.setState({role})\r\n            }, // 点击行\r\n        } \r\n    }\r\n\r\n    getRoles = async ()=>{\r\n        const result = await reqRoles()\r\n        if(result.status===0){\r\n            // 请求成功\r\n            this.setState({\r\n                roles:result.data\r\n            })\r\n        }\r\n    }\r\n    \r\n    handleCancel = () => {\r\n        this.setState({ isShowAdd:false })\r\n         // 清除上次的表单数据\r\n         this.form.resetFields()\r\n    }\r\n\r\n    addRole = async () => {\r\n        // console.log(\"addRole()\")\r\n        this.form.validateFields(['roleName']).then(async (values) => {\r\n            // 准备数据\r\n            const {roleName} = values\r\n            // console.log(\"roleName\",roleName)\r\n            // 清除上次的表单数据\r\n            this.form.resetFields()\r\n            // 发送请求\r\n            const result = await reqAddRole(roleName)\r\n            // 请求成功，更新\r\n            this.setState({isShowAdd:false})\r\n            if(result.status===0){\r\n                message.success(\"添加用户角色成功！\")\r\n                // this.getRoles()\r\n                const role = result.data\r\n                this.setState(preState=>({\r\n                    roles:[...preState.roles,role]\r\n                }))\r\n            }else{\r\n                message.success(\"添加用户角色失败！\")\r\n            }\r\n        })\r\n    }\r\n    updateRole = async ()=>{\r\n        console.log(\"updateRole()\")\r\n        const menus = this.auth.current.getAuth()\r\n        // console.log(\"meunys\",menus)\r\n        this.setState({isShowUpdate:false})\r\n\r\n        const role = this.state.role\r\n        role.menus = menus\r\n        role.auth_time = new Date()\r\n        role.auth_name = memoryUtils.user.username\r\n\r\n        const result = await reqUpdateRole(role)\r\n        if(result.status===0){\r\n            // 当前用户\r\n            if(memoryUtils.user.role_id===role._id){\r\n                message.success(\"更新当前用户权限成功！\")\r\n                // 将storage中的user信息清除\r\n                memoryUtils.user = {}\r\n                storageUtils.removeUser()\r\n                this.props.history.replace('/login')\r\n            }else{\r\n                message.success(\"更新用户权限成功！\")\r\n            }\r\n        }else{\r\n            message.error(\"更新用户权限失败！\")\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.initColumns()\r\n    }\r\n    componentDidMount(){\r\n        this.getRoles()\r\n    }\r\n    render() {\r\n        const { roles,role,isShowAdd ,isShowUpdate} = this.state\r\n        const title = (\r\n            <span>\r\n                <Button type=\"primary\" onClick={()=>this.setState({isShowAdd:true})}>创建角色</Button>&nbsp;&nbsp;\r\n                <Button type=\"primary\" disabled={!role._id} onClick={()=>this.setState({isShowUpdate:true})}>设置角色权限</Button>\r\n            </span>\r\n        )\r\n        return (\r\n            <Card\r\n                title={title}\r\n            >\r\n                <Table\r\n                    rowKey='_id'\r\n                    columns={this.columns}\r\n                    bordered\r\n                    dataSource={roles}\r\n                    rowSelection={{\r\n                        type: 'radio',\r\n                        selectedRowKeys:[role._id],\r\n                        onSelect: (role)=>this.setState({role})\r\n                    }}\r\n                    onRow={this.onRow}\r\n                    pagination={{ defaultPageSize: PAGE_SIZE }}\r\n                />\r\n                <Modal\r\n                    title=\"添加角色\"\r\n                    visible={isShowAdd}\r\n                    onOk={this.addRole}\r\n                    onCancel={this.handleCancel}>\r\n                    <AddRole setForm={(form)=>this.form = form}/>\r\n                </Modal>\r\n                <Modal\r\n                    title=\"修改角色\"\r\n                    visible={isShowUpdate}\r\n                    onOk={this.updateRole}\r\n                    onCancel={()=>{\r\n                        this.setState({isShowUpdate:false})\r\n                    }}>\r\n                    <UpdateRole role={role} ref={this.auth}/>\r\n                </Modal>\r\n            </Card>\r\n        )\r\n    }\r\n}","/*\r\n用户登陆的路由组件\r\n*/\r\nimport React, { Component } from 'react'\r\nimport ReactEcharts from 'echarts-for-react';\r\nimport {\r\n    Card,\r\n    Button\r\n} from 'antd'\r\n\r\nexport default class Bar extends Component {\r\n    state = {\r\n        happyness:[120, 200, 150, 80, 70, 110, 130]\r\n    }\r\n    getOption = (happyness)=>{\r\n        return {\r\n            xAxis: {\r\n                type: 'category',\r\n                data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\r\n            },\r\n            yAxis: {\r\n                type: 'value'\r\n            },\r\n            series: [{\r\n                data: happyness,\r\n                type: 'bar'\r\n            }]\r\n        };\r\n    }\r\n    updateData = ()=>{\r\n        this.setState((state)=>({\r\n            happyness:[...state.happyness].map(h=>h+1)\r\n        }))\r\n    }\r\n    render() {\r\n        const {happyness} = this.state\r\n        const title = (\r\n            <Button type=\"primary\" onClick={this.updateData}>更新</Button>\r\n        )\r\n        return (\r\n            <Card\r\n            title={title}\r\n            >\r\n                <ReactEcharts option={this.getOption(happyness)} />\r\n            </Card>\r\n           \r\n        )\r\n    }\r\n}","/*\r\n用户登陆的路由组件\r\n*/\r\nimport React, { Component } from 'react'\r\nimport ReactEcharts from 'echarts-for-react';\r\nimport {\r\n    Card,\r\n    Button\r\n} from 'antd'\r\n\r\nexport default class Line extends Component {\r\n    state = {\r\n        happyness:[120, 200, 150, 80, 70, 110, 130]\r\n    }\r\n    getOption = (happyness)=>{\r\n        return {\r\n            xAxis: {\r\n                type: 'category',\r\n                data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\r\n            },\r\n            yAxis: {\r\n                type: 'value'\r\n            },\r\n            series: [{\r\n                data: happyness,\r\n                type: 'line'\r\n            }]\r\n        };\r\n    }\r\n    updateData = ()=>{\r\n        this.setState((state)=>({\r\n            happyness:[...state.happyness].map(h=>h+1)\r\n        }))\r\n    }\r\n    render() {\r\n        const {happyness} = this.state\r\n        const title = (\r\n            <Button type=\"primary\" onClick={this.updateData}>更新</Button>\r\n        )\r\n        return (\r\n            <Card\r\n            title={title}\r\n            >\r\n                <ReactEcharts option={this.getOption(happyness)} />\r\n            </Card>\r\n           \r\n        )\r\n    }\r\n}","/*\r\n用户登陆的路由组件\r\n*/\r\nimport React, { Component } from 'react'\r\nimport {\r\n    Card,\r\n    Button\r\n} from 'antd'\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nexport default class Pie extends Component {\r\n    getOption1 = ()=>{\r\n        return  {\r\n            angleAxis: {\r\n                type: 'category',\r\n                data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日']\r\n            },\r\n            radiusAxis: {\r\n            },\r\n            polar: {\r\n            },\r\n            series: [{\r\n                type: 'bar',\r\n                data: [1, 2, 3, 4, 3, 5, 1],\r\n                coordinateSystem: 'polar',\r\n                name: 'A',\r\n                stack: 'a'\r\n            }, {\r\n                type: 'bar',\r\n                data: [2, 4, 6, 1, 3, 2, 1],\r\n                coordinateSystem: 'polar',\r\n                name: 'B',\r\n                stack: 'a'\r\n            }, {\r\n                type: 'bar',\r\n                data: [1, 2, 3, 4, 1, 2, 5],\r\n                coordinateSystem: 'polar',\r\n                name: 'C',\r\n                stack: 'a'\r\n            }],\r\n            legend: {\r\n                show: true,\r\n                data: ['A', 'B', 'C']\r\n            }\r\n        };\r\n        \r\n    }\r\n    getOption2 = ()=>{\r\n        return  {\r\n            title: {\r\n                text: '某站点用户访问来源',\r\n                subtext: '纯属虚构',\r\n                left: 'center'\r\n            },\r\n            tooltip: {\r\n                trigger: 'item',\r\n                formatter: '{a} <br/>{b} : {c} ({d}%)'\r\n            },\r\n            legend: {\r\n                orient: 'vertical',\r\n                left: 'left',\r\n                data: ['直接访问', '邮件营销', '联盟广告', '视频广告', '搜索引擎']\r\n            },\r\n            series: [\r\n                {\r\n                    name: '访问来源',\r\n                    type: 'pie',\r\n                    radius: '55%',\r\n                    center: ['50%', '60%'],\r\n                    data: [\r\n                        {value: 335, name: '直接访问'},\r\n                        {value: 310, name: '邮件营销'},\r\n                        {value: 234, name: '联盟广告'},\r\n                        {value: 135, name: '视频广告'},\r\n                        {value: 1548, name: '搜索引擎'}\r\n                    ],\r\n                    emphasis: {\r\n                        itemStyle: {\r\n                            shadowBlur: 10,\r\n                            shadowOffsetX: 0,\r\n                            shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                        }\r\n                    }\r\n                }\r\n            ]\r\n        };\r\n        \r\n    }\r\n    render() {\r\n        const title1 = (\r\n            \"雷达图\"\r\n        )\r\n        const title2 = (\r\n            \"饼图\"\r\n        )\r\n        return (\r\n            <div>\r\n                <Card\r\n                    title={title1}\r\n                >\r\n                    <ReactEcharts option={this.getOption1()} />\r\n                </Card>\r\n                <Card\r\n                    title={title2}\r\n                >\r\n                    <ReactEcharts option={this.getOption2()} />\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}","/*\r\n用户登陆的路由组件\r\n*/\r\nimport React, { Component } from 'react'\r\n\r\nexport default class Order extends Component {\r\n    render() {\r\n        return (\r\n            <div >\r\n                Order\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react'\r\nimport {Button, Row, Col} from 'antd'\r\nimport './not-found.less'\r\n/*\r\n前台404页面\r\n */\r\nexport default class NotFound extends Component {\r\n  render() {\r\n    return (\r\n\r\n      <Row className='not-found'>\r\n        <Col span={12} className='left'></Col>\r\n        <Col span={12} className='right'>\r\n          <h1>404</h1>\r\n          <h2>抱歉，你访问的页面不存在</h2>\r\n          <div>\r\n            <Button type='primary' onClick={() => this.props.history.replace('/home')}>\r\n              回到首页\r\n            </Button>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n}","/*\r\n后台管理主路由组件\r\n*/\r\nimport React, { Component } from 'react'\r\nimport memoryUtils from '../../utils/memoryUtils'\r\nimport { Redirect, Switch, Route } from 'react-router-dom'\r\nimport { Layout } from 'antd';\r\n\r\nimport Header from '../../components/header/header'\r\nimport LeftNav from '../../components/left-nav/left-nav'\r\nimport Home from '../home/home'\r\nimport Category from '../category/category'\r\nimport Product from '../product/product'\r\nimport User from '../user/user'\r\nimport Role from '../role/role'\r\nimport Bar from '../charts/bar'\r\nimport Line from '../charts/line'\r\nimport Pie from '../charts/pie'\r\nimport Order from '../order/order'\r\nimport NotFound from '../not-found/not-found'\r\n\r\nconst {  Footer, Sider, Content } = Layout;\r\n\r\nexport default class Admin extends Component {\r\n    render() {\r\n        const user = memoryUtils.user;\r\n        if (!user || !user._id) {\r\n            return <Redirect to=\"/login\"></Redirect>\r\n        }\r\n        return (\r\n                <Layout style={{minHeight: '100%'}}>\r\n                    <Sider><LeftNav/></Sider>\r\n                    <Layout>\r\n                        <Header>Header</Header>\r\n                        <Content style={{margin:20,backgroundColor:'#fff'}}>\r\n                            <Switch>\r\n                            <Redirect from='/' exact to='/home'/>\r\n                            <Route path='/home' component={Home}/>\r\n                            <Route path='/category' component={Category}/>\r\n                            <Route path='/product' component={Product}/>\r\n                            <Route path='/user' component={User}/>\r\n                            <Route path='/role' component={Role}/>\r\n                            <Route path=\"/charts/bar\" component={Bar}/>\r\n                            <Route path=\"/charts/pie\" component={Pie}/>\r\n                            <Route path=\"/charts/line\" component={Line}/>\r\n                            <Route path=\"/order\" component={Order}/>\r\n                            <Route component={NotFound}/>\r\n                            </Switch>\r\n                        </Content>\r\n                        <Footer style={{textAlign: 'center', color: '#aaaaaa'}}>推荐使用谷歌浏览器，\r\n                            可以获得更佳页面操作体验</Footer>\r\n                    </Layout>\r\n                </Layout>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Button, message } from 'antd'\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\r\n// import './App.less';\r\nimport Login from './pages/login/login'\r\nimport Admin from './pages/admin/admin'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route path='/login' component={Login} />\r\n          <Route path='/' component={Admin} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\n","import {combineReducers} from 'redux'\r\nimport {SET_HEAD_TITLE} from './action-types'\r\n\r\nconst initialHeadTitle = '首页'\r\n\r\nexport function headTitle(state = initialHeadTitle, action){\r\n    switch (action.type) {\r\n        case SET_HEAD_TITLE:\r\n            return action.data\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default combineReducers(\r\n    {\r\n        headTitle\r\n    }\r\n)","\r\nimport {createStore,applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport reducer from './reducers'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\n\r\nexport default createStore(reducer,composeWithDevTools(applyMiddleware(thunk)))","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n// 读取local中的user,保存到内存中\r\nimport storageUtils from './utils/storageUtils'\r\nimport memoryUtils from './utils/memoryUtils'\r\n\r\nimport store from './redux/store'\r\nimport {Provider} from 'react-redux'\r\n\r\nconst user = storageUtils.getUser()\r\nmemoryUtils.user = user;\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n      <App/>\r\n    </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}